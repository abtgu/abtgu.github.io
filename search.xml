<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BJDCTF 2nd writeup</title>
    <url>/2020/03/23/writeup04/</url>
    <content><![CDATA[<h1 id="bjdctf-2nd签到-y1ng"><a class="markdownIt-Anchor" href="#bjdctf-2nd签到-y1ng"></a> [BJDCTF 2nd]签到-y1ng</h1>
<p><strong>题目：</strong> QkpEe1czbGMwbWVfVDBfQkpEQ1RGfQ==<br />
<strong>解题思路：</strong> 直接base64解码即可。BJD{W3lc0me_T0_BJDCTF}</p>
<h1 id="bjdctf-2nd灵能精通-y1ng"><a class="markdownIt-Anchor" href="#bjdctf-2nd灵能精通-y1ng"></a> [BJDCTF 2nd]灵能精通-y1ng</h1>
<p><strong>题目：</strong>  身经百战的Y1ng已经达到崇高的武术境界，以自律克己来取代狂热者的战斗狂怒与传统的战斗形式。Y1ng所受的训练也进一步将他们的灵能强化到足以瓦解周遭的物质世界。借由集中这股力量，Y1ng能释放灵能能量风暴来摧毁敌人的心智、肉体与器械。<br />
<strong>解题思路：</strong>  为下载得到的jpg添加后缀.jpg,得到图片<br />
<img src="https://img-blog.csdnimg.cn/20200323201624449.jpg" alt="在这里插入图片描述" /><br />
观察图片，可以知道是猪圈密码，解密即可。</p>
<p>flag{IMKNIGHTSTEMPLAR}。</p>
<h1 id="bjdctf-2ndreal_easybaba"><a class="markdownIt-Anchor" href="#bjdctf-2ndreal_easybaba"></a> [BJDCTF 2nd]Real_EasyBaBa</h1>
<p><strong>题目：</strong>  得到的 flag 建议用 flag{} 包上提交。<br />
<strong>解题思路：</strong><br />
<img src="https://img-blog.csdnimg.cn/20200323201657316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<p>用winhex查看图片发现<br />
<img src="https://img-blog.csdnimg.cn/20200323201737862.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<p>BJD{572154976}。</p>
<h1 id="bjdctf-2nd圣火昭昭-y1ng"><a class="markdownIt-Anchor" href="#bjdctf-2nd圣火昭昭-y1ng"></a> [BJDCTF 2nd]圣火昭昭-y1ng</h1>
<p><strong>题目：</strong>  开局一张图，flag全靠猜，因为出题人失误搞错了，解出来的key去掉后3位的com。<br />
<strong>解题思路：</strong> 查看图片属性，发现新佛曰<br />
<img src="https://img-blog.csdnimg.cn/20200323201829383.PNG#pic_center" alt="在这里插入图片描述" /></p>
<p>解密地址 ：<a href="http://hi.pcmoe.net/buddha.html" target="_blank" rel="noopener">http://hi.pcmoe.net/buddha.html</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200323201906983.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<p>得到gemlovecom，去掉“com”提交，发现incorrect，想到题目中的“猜”，联想到Outguess隐写，在Kali下运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">outguess -k <span class="string">'gemlove'</span> -r <span class="string">'/root/桌面/1.jpg'</span> -t 11.txt</span><br></pre></td></tr></table></figure>
<p>得到flag，BJD{wdnmd_misc_1s_so_Fuck1ng_e@sy}。</p>
<h1 id="bjdctf-2nd最简单的misc-y1ng"><a class="markdownIt-Anchor" href="#bjdctf-2nd最简单的misc-y1ng"></a> [BJDCTF 2nd]最简单的misc-y1ng</h1>
<p><strong>题目：</strong>  得到的 flag 建议用 flag{} 包上提交。<br />
<strong>解题思路：</strong> 查看secret的十六进制表示，发现是缺少文件头的png，插入png文件头89 50 4e 47 ，添加后缀名.png,得到图片</p>
<p><img src="https://img-blog.csdnimg.cn/20200323202015469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br />
观察图中是十六进制数据，转换成字符即可。</p>
<p><img src="https://img-blog.csdnimg.cn/20200323202049404.PNG#pic_center" alt="在这里插入图片描述" /></p>
<h1 id="bjdctf-2ndeasybaba"><a class="markdownIt-Anchor" href="#bjdctf-2ndeasybaba"></a> [BJDCTF 2nd]EasyBaBa</h1>
<p><strong>题目：</strong>  得到的 flag 建议用 flag{} 包上提交。<br />
<strong>解题思路：</strong> 用binwalk查看图片</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">binwalk ezbb.jpg</span><br></pre></td></tr></table></figure>
<p>发现压缩文件，foremost分离文件，打开zip，里面有一张图片，查看其十六进制形式，发现是avi格式，更改后缀名，打开发现该视频中有4个二维码，扫描得到一串十六进制数字424a447b696d6167696e5f6c6f76655f59316e677d<br />
转换成字符即得flag，BJD{imagin_love_Y1ng}。</p>
<h1 id="bjdctf-2nd老文盲了"><a class="markdownIt-Anchor" href="#bjdctf-2nd老文盲了"></a> [BJDCTF 2nd]老文盲了</h1>
<p><strong>题目：</strong>  BJD{这里是中文} 。<br />
<strong>解题思路：</strong><br />
打开文本发现“罼雧締眔擴灝淛匶襫黼瀬鎶軄鶛驕鳓哵眔鞹鰝”，百度一下每个字的读音，发现他们的谐音是：bjd{这就是flag直接交了吧}，故直接将“淛匶襫黼瀬鎶軄鶛驕鳓哵”提交即可。BJD{淛匶襫黼瀬鎶軄鶛驕鳓哵}。</p>
<p>黼瀬鎶軄鶛驕鳓哵”提交即可。BJD{淛匶襫黼瀬鎶軄鶛驕鳓哵}。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>WhaleCTF-隐写术writeup</title>
    <url>/2020/03/20/writeup03/</url>
    <content><![CDATA[<h2 id="下雨天"><a class="markdownIt-Anchor" href="#下雨天"></a> 下雨天</h2>
<p><strong>题目：</strong> 答案格式：GUETCTF{flag}，flag是解密内容。<br />
<strong>解题思路：</strong> 题中图片</p>
<p><img src="https://img-blog.csdnimg.cn/20200320104735621.jpg#pic_center#=200x" alt="在这里插入图片描述" /><br />
用notepad++打开图片，发现该图片是gif</p>
<p><img src="https://img-blog.csdnimg.cn/20200320105051510.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=400x" alt="在这里插入图片描述" /></p>
<p>更改后缀名，用StegSolve打开，使用Frame Browser帧浏览功能进行分解，得到flag。</p>
<p><img src="https://img-blog.csdnimg.cn/20200320105155729.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=200x" alt="在这里插入图片描述" /></p>
<h2 id="分解2"><a class="markdownIt-Anchor" href="#分解2"></a> 分解2</h2>
<p><strong>题目：</strong> 提交格式是flag{xxxx},所以答案是？<br />
<strong>解题思路：</strong> 题中图片<br />
<img src="https://img-blog.csdnimg.cn/20200320105506326.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=200x" alt="在这里插入图片描述" /></p>
<p>根据题目分解，可以联想到文件提取，用kali下的binwalk查看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">binwalk 03-mm-easy.jpg</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200320105557910.PNG#pic_center" alt="在这里插入图片描述" /></p>
<p>再用foremost提取图片,得到flag。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">foremost 03-mm-easy.jpg</span><br></pre></td></tr></table></figure>
<h2 id="分解3"><a class="markdownIt-Anchor" href="#分解3"></a> 分解3</h2>
<p>与上一题相似，这里就不在重复书写解题思路。</p>
<h2 id="女神"><a class="markdownIt-Anchor" href="#女神"></a> 女神</h2>
<p><strong>题目：</strong> 女神的头发里好像有东西！答案格式：nctf{flag}，flag是解密内容。<br />
<strong>解题思路：</strong> 题中图片<br />
<img src="https://img-blog.csdnimg.cn/20200320110029717.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=200x" alt="在这里插入图片描述" /><br />
notepad++打开在最下面发现flag</p>
<p><img src="https://img-blog.csdnimg.cn/20200320105710119.PNG#pic_center" alt="在这里插入图片描述" /></p>
<h2 id="捉迷藏"><a class="markdownIt-Anchor" href="#捉迷藏"></a> 捉迷藏</h2>
<p><strong>题目：</strong> 你找不到我的~答案格式：key{flag}，flag是解密内容。<br />
<strong>解题思路：</strong><br />
用StegSolve打开图片，逐图层查看，发现flag。</p>
<p><img src="https://img-blog.csdnimg.cn/20200320105737255.PNG#pic_center#=200x" alt="在这里插入图片描述" /></p>
<h2 id="word隐写"><a class="markdownIt-Anchor" href="#word隐写"></a> word隐写</h2>
<p><strong>题目：</strong> 答案格式：venusctf{flag}，flag是解密内容。<br />
<strong>解题思路：</strong><br />
添加后缀名.docx，打开文档，发现文中《锦带书十二月启·林锺六月》的每一行均未显示第一个字，将其字体更改为红色，但是，这些字不是flag。<br />
将选项中的隐藏文字勾选，<br />
<img src="https://img-blog.csdnimg.cn/2020032010581536.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=400x" alt="在这里插入图片描述" /></p>
<p>发现flag。</p>
<p><img src="https://img-blog.csdnimg.cn/20200320105854220.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=200x" alt="在这里插入图片描述" /></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>WhaleCTF-隐写术 彩虹的声音</title>
    <url>/2020/03/19/writeup02/</url>
    <content><![CDATA[<p><strong>题目</strong>：风雨过后就会见到彩虹的，答案格式是key{xxxx}，所以答案是？<br />
<strong>解题思路</strong>：用Audacity打开音频文件，观察波形，选择用频谱图查看<img src="https://img-blog.csdnimg.cn/20200318151223353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />
得到flag<br />
<img src="https://img-blog.csdnimg.cn/20200318151300105.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>Whale-隐写术 分解1</title>
    <url>/2020/03/18/writeup01/</url>
    <content><![CDATA[<h2 id="分解1"><a class="markdownIt-Anchor" href="#分解1"></a> 分解1</h2>
<pre><code>题目：答案的格式是sctf{xxxxx}，所以答案是
</code></pre>
<p>解题思路：打开题中图片<img src="https://img-blog.csdnimg.cn/20200318094204424.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />
根据题目分解，可以联想到文件提取，用kali下的binwalk查看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">binwalk -e 02-carter.jpg</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200318094517646.PNG" alt="在这里插入图片描述" /><br />
发现其中隐藏一张图片，再用foremost分解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">foremost 02-carter.jpg -o 1</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200318094805469.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />
得到flag。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-隐写术 学习笔记</title>
    <url>/2020/03/16/%E9%9A%90%E5%86%99%E6%9C%AF/</url>
    <content><![CDATA[<h1 id="ctf-隐写术"><a class="markdownIt-Anchor" href="#ctf-隐写术"></a> CTF-隐写术</h1>
<p>隐写术是关于信息隐藏，即不让计划的接受者之外的任何人知道信息的传递事件（不只是信息的内容）的一门技巧与科学。</p>
<h2 id="常用文件头文件尾"><a class="markdownIt-Anchor" href="#常用文件头文件尾"></a> 常用文件头，文件尾</h2>
<ul>
<li>JPEG(jpg),      文件头：FF D8 FF                     文件尾：FF D9</li>
<li>PNG(png),     文件头：89 50 4E 47               文件尾：AE 42 60 82</li>
<li>GIF(gif),          文件头：47 49 46 38               文件尾：00 3B</li>
<li>ZIP(zip),         文件头：50 4B 03 04               文件尾：50 4B</li>
<li>TIFIF(tif),        文件头：49 49 2A 00</li>
<li>RAR(rar),       文件头：52 61 72 21</li>
</ul>
<h2 id="图片隐写"><a class="markdownIt-Anchor" href="#图片隐写"></a> 图片隐写</h2>
<ol>
<li>
<p>Exif：一种图像文件格式，就是在JPEG格式头部插入了数码照片的信息。（Kali中exif命令查看参数）。</p>
</li>
<li>
<p>文件隐藏：用压缩软件将需要隐藏的文件压缩成zip或rar格式，以zip为例，压缩好后重命名，在准备一张jpg格式图片，在cmd下执行命令<br />
copy D:\1.jpg+D:\2.zip D:\3.jpg</p>
</li>
<li>
<p>文件提取：Kali里用binwalk -e 提取已知文件类型。foremost 分离文件。</p>
</li>
<li>
<p>LSB隐写：将秘密信息嵌入到载体图像像素值的最低有效位，也称最不显著位，这一位置是图像最不重要的像素位。</p>
</li>
</ol>
<h2 id="apk"><a class="markdownIt-Anchor" href="#apk"></a> apk</h2>
<ol>
<li>查看：将后缀名改为zip。</li>
<li>flag通常放在res文件夹下，不考虑layout文件夹。</li>
</ol>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>隐写术</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-密码学知识学习笔记</title>
    <url>/2020/03/14/%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
    <content><![CDATA[<h1 id="古典密码学"><a class="markdownIt-Anchor" href="#古典密码学"></a> 古典密码学</h1>
<h2 id="单表替换"><a class="markdownIt-Anchor" href="#单表替换"></a> 单表替换</h2>
<h3 id="简单介绍"><a class="markdownIt-Anchor" href="#简单介绍"></a> 简单介绍</h3>
<ul>
<li>特点：明文和密文一一对应。</li>
<li>密钥空间小的情况下，暴力破解。</li>
<li>密文足够长的时候，采用词频分析。</li>
<li>特征：一般只能加密字母，不会加密特殊符号，且不会变换字母顺序，加密过后大概率第四或第五位为“{”。</li>
</ul>
<h3 id="常见单表替换密码"><a class="markdownIt-Anchor" href="#常见单表替换密码"></a> 常见单表替换密码</h3>
<ol>
<li>凯撒密码(Caesar)：按照字母表顺序向前（后）移动固定数目；<br />
在线加解密：<a href="http://planetcalc.com/1434/" target="_blank" rel="noopener">http://planetcalc.com/1434/</a></li>
<li>ROT13：特殊的凯撒密码；</li>
<li>埃特巴什码(Atbash Cipher)：第一个字母对应最后一个字母，第二个对应倒数第二个；</li>
<li>简单替换密码：替换密码表没有规律，利用词频分析破解；</li>
<li>仿射密码：通过数学函数建立字母映射（一元一次函数）；</li>
<li>培根密码 (Baconian Cipher )：每个明文字母被一个由5字符(a,b)组成的序列替换。<br />
在线加解密：<a href="http://rumkin.com/tools/cipher/baconian.php" target="_blank" rel="noopener">http://rumkin.com/tools/cipher/baconian.php</a><br />
通常查表直接解：<br />
<a href="http://blog.csdn.net/qq_39455664/article/details/78344952" target="_blank" rel="noopener">http://blog.csdn.net/qq_39455664/article/details/78344952</a></li>
</ol>
<h2 id="多表替换"><a class="markdownIt-Anchor" href="#多表替换"></a> 多表替换</h2>
<h3 id="简单介绍-2"><a class="markdownIt-Anchor" href="#简单介绍-2"></a> 简单介绍</h3>
<ul>
<li>特点：明文和密文不在一一对应。</li>
<li>基本不能用词频分析。</li>
</ul>
<h3 id="常见多表替换密码"><a class="markdownIt-Anchor" href="#常见多表替换密码"></a> 常见多表替换密码</h3>
<ol>
<li>维吉尼亚密码(Vigenere) ：使用一系列凯撒密码组成密码字母表的加密算法，行对应明文，列对应密钥；</li>
<li>棋盘密码(Polybius)：一般是将给定的明文加密为两两组合的数字（或ADFGX），例，明文HELLO，加密后23 15 31 31 34。</li>
</ol>
<h2 id="其它密码"><a class="markdownIt-Anchor" href="#其它密码"></a> 其它密码</h2>
<ol>
<li>栅栏密码：明文分成n个一组，取每组的第i个字组成第i段密文，最后将多段组合在一起，栅栏的栏数就是分组个数；</li>
<li>猪圈密码(Pigpen)：别称朱高密码、共济会密码、九宫格密码，一格子为基础的简单替代式密码。在线加解密：<a href="http://www.simonsingh.net/The_Black_Chamber/pigpen.html" target="_blank" rel="noopener">http://www.simonsingh.net/The_Black_Chamber/pigpen.html</a></li>
<li>云影密码：01248密码，用01248四个数字，其中 0 用来表示间隔，其他数字以加法可以表示出 如：28=10，124=7，18=9，再用 1-&gt;26 表示 A-&gt;Z。</li>
<li>摩斯密码：摩尔斯电码（又译为摩斯密码，Morse code）是一种时通时断的信号代码，通过不同的排列顺序来表达不同的英文字母、数字和标点符号。只有.（点）和-（划）<br />
在线加解密：<a href="https://www.bejson.com/enc/morse/" target="_blank" rel="noopener">https://www.bejson.com/enc/morse/</a></li>
<li>JSFuck： JSFuck 可以只用 6 个字符 !+ 来编写 JavaScript 程序。<br />
在线加解密：<a href="http://www.jsfuck.com/" target="_blank" rel="noopener">http://www.jsfuck.com/</a></li>
<li>BrainFuck和ook：是一种极小化的计算机语言。<br />
在线加解密：<a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a></li>
</ol>
<h1 id="现代密码学"><a class="markdownIt-Anchor" href="#现代密码学"></a> 现代密码学</h1>
<h2 id="基础"><a class="markdownIt-Anchor" href="#基础"></a> 基础</h2>
<ul>
<li>对称加密：加密和解密采用同一密钥。</li>
<li>非对称加密：使用一堆密钥，分为公私钥，公钥加（解）密，私钥解（加）密。</li>
</ul>
<h2 id="des加密对称加密"><a class="markdownIt-Anchor" href="#des加密对称加密"></a> DES加密（对称加密）</h2>
<h3 id="简单介绍-3"><a class="markdownIt-Anchor" href="#简单介绍-3"></a> 简单介绍</h3>
<ol>
<li>密钥是56比特，明文为64比特。</li>
<li>DES的基本结构是Feistel网络；DES是一种16轮的Feistel网络；子密钥每轮都会变；</li>
<li>Feistel网络特质：
<ul>
<li>轮数任意增加；</li>
<li>加密解密结构相同；</li>
<li>解密密钥倒着输入即可；</li>
<li>任何函数都可以作为轮函数。</li>
</ul>
</li>
</ol>
<h3 id="des攻击"><a class="markdownIt-Anchor" href="#des攻击"></a> DES攻击</h3>
<ol>
<li>差分攻击：改变一部分明文并分析密文如何改变。</li>
<li>线性攻击：将明文和密文的对应比特进行异或并计算结果为0的概率。</li>
</ol>
<h2 id="rsa加密非对称加密"><a class="markdownIt-Anchor" href="#rsa加密非对称加密"></a> RSA加密（非对称加密）</h2>
<h3 id="简单介绍-4"><a class="markdownIt-Anchor" href="#简单介绍-4"></a> 简单介绍</h3>
<ol>
<li>
<p>RSA可以被用于加密解密，密钥交换，数字签名；基于大数分解难题；</p>
</li>
<li>
<p>生成公私钥的步骤：</p>
<ul>
<li>随机生成两个素数p,q;</li>
<li>计算N = p·q和欧拉函数φ(N)=(p-1)(q-1);</li>
<li>随机选择一个加密密钥e，这里1&lt;e&lt;φ(N), gcd(e,φ(N)) = 1；</li>
<li>求解e·d=1 mod φ(N) 且 0≤d≤N   （乘法逆元）；</li>
<li>发布加密密钥公钥KU = {e，N}；</li>
<li>保密解密密钥私钥KR = {d，N}。</li>
</ul>
</li>
<li>
<p>加密：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><msup><mi>M</mi><mi>e</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">C = M^e(mod N);
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mpunct">;</span></span></span></span></span></p>
</li>
<li>
<p>解密：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><msup><mi>C</mi><mi>d</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M = C^d(modN)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>题型：</p>
<ul>
<li>直接解密（已知p，q，求d）；</li>
<li>N相关攻击：
<ul>
<li>分解N，最大素数公约数；</li>
<li>共模攻击：RSA体系在生成密钥的过程中使用了相同的模数n；</li>
</ul>
</li>
<li>e相关攻击：
<ul>
<li>小指数e攻击：直接爆破；</li>
<li>低加密指数广播攻击；</li>
</ul>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>密码学</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-WEB文件上传,SQL注入,XXS漏洞知识学习笔记</title>
    <url>/2020/03/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<h1 id="ctf-web"><a class="markdownIt-Anchor" href="#ctf-web"></a> CTF-WEB</h1>
<h2 id="文件上传"><a class="markdownIt-Anchor" href="#文件上传"></a> 文件上传</h2>
<h3 id="1-前端校验"><a class="markdownIt-Anchor" href="#1-前端校验"></a> 1. 前端校验</h3>
<ul>
<li>校验方法：JavaScript判断后缀，类型等</li>
<li>绕过：Burpsuite抓包，禁用js</li>
</ul>
<h3 id="2-content-type校验"><a class="markdownIt-Anchor" href="#2-content-type校验"></a> 2. Content-Type校验</h3>
<ul>
<li>检测image/gif           $ _ FILES[‘userfile’]  [‘type’] != “image/gif”</li>
<li>http头可以随意修改，不可信</li>
<li>绕过：Burpsuite抓包</li>
</ul>
<h3 id="3-黑名单-过滤绕过"><a class="markdownIt-Anchor" href="#3-黑名单-过滤绕过"></a> 3. 黑名单 过滤绕过</h3>
<ul>
<li>可能过滤不全
<ul>
<li>.php3  .php5  .phtml</li>
<li>.htaccess</li>
</ul>
</li>
<li>大小写绕过</li>
<li>简单替换                      str_ireplace(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>e</mi><mi>n</mi><msub><mi>y</mi><mi>e</mi></msub><mi>x</mi><mi>t</mi><msup><mo separator="true">,</mo><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">deny_ext,&#x27;&#x27;,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mord mathdefault">t</span><span class="mpunct"><span class="mpunct">,</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span>file_name);</li>
<li>windows特性
<ul>
<li>空格 和 点 在文件末尾会被忽略</li>
<li>::$DATA 忽略</li>
</ul>
</li>
</ul>
<h3 id="4-特殊文件"><a class="markdownIt-Anchor" href="#4-特殊文件"></a> 4. 特殊文件</h3>
<ul>
<li>.htaccess全称是Hypertext Access(超文本入口)，控制目录文件行为</li>
<li>配置
<ul>
<li>AllowOverride All</li>
<li>LoadModule rewrite_module /user/lib/apache2/modules/mod_rewrite.so</li>
</ul>
</li>
<li>功能：文件夹密码保护、用户自动重定向、自定义错误页面、改变你的文件扩展名、封禁特定IP地址的用户、只允许特定地址IP的用户、禁止目录列表</li>
<li>利用：
<ul>
<li>上传.htaccess 让给定目录下所有文件被视为php解析<br />
SetHandler appllcation/x-httpd-php</li>
<li>将所有xxx结尾的文件视为php解析<br />
AddType appllcation/x-httpd-php xxx</li>
</ul>
</li>
</ul>
<h3 id="5-漏洞解析"><a class="markdownIt-Anchor" href="#5-漏洞解析"></a> 5. 漏洞解析</h3>
<ul>
<li>Apache
<ul>
<li>陌生后缀解析：从后往前解析，碰到陌生后缀跳过，直到碰到认识的后缀
<ul>
<li>apache 1.x，2.x ：<a href="http://1.php.xxx" target="_blank" rel="noopener">1.php.xxx</a> ----&gt; 先解析xxx 之后php…</li>
</ul>
</li>
<li>换行解析(CVE-2017-15715)：将换行符作为后缀解析
<ul>
<li>apache 2.4.0-2.4.29：1.php%0A</li>
</ul>
</li>
<li>nginx：cgi方式支持php解析，正则判断
<ul>
<li>条件：cgi.fix_pathinfo=1：phpinfo.jpg /1.php</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="6-00url编码-和-0x00-16进制截断"><a class="markdownIt-Anchor" href="#6-00url编码-和-0x00-16进制截断"></a> 6. %00(url编码) 和 0x00 (16进制)截断</h3>
<ul>
<li>场景：$img_path = $ _ GET[‘save_path’].&quot;/&quot;.rand(10,99).date(“YmdHls”).’’.’’.$file_ext;</li>
<li>利用
<ul>
<li>GET传参：save_path = …/upload/info.php%00</li>
<li>POST传参：save_path = …/upload/info.php\x00</li>
</ul>
</li>
</ul>
<h2 id="sql注入"><a class="markdownIt-Anchor" href="#sql注入"></a> SQL注入</h2>
<h3 id="1-典型攻击手段"><a class="markdownIt-Anchor" href="#1-典型攻击手段"></a> 1. 典型攻击手段：</h3>
<ul>
<li>判断应用程序是否存在注入漏洞</li>
<li>收集信息、并判断数据库类型</li>
<li>根据注入参数类型，重构SQL语句原貌</li>
<li>猜表名、字段名</li>
<li>获取账户信息、攻击WEB或为下一步攻击做准备</li>
</ul>
<h3 id="2-出题人套路"><a class="markdownIt-Anchor" href="#2-出题人套路"></a> 2. 出题人套路：</h3>
<ul>
<li>屏蔽关键词
<ul>
<li>加无意义符号：空格，回车，tab键</li>
<li>编码</li>
<li>替换关键词</li>
<li>拼接</li>
<li>大小写混写、双写</li>
<li>内联注释</li>
</ul>
</li>
<li>隐藏注入点
<ul>
<li>增加页面数</li>
<li>使逻辑结构复杂化</li>
<li>伪装不是注入点</li>
<li>改变注入参数(http头文件)</li>
</ul>
</li>
<li>加密
<ul>
<li>加密后在进入数据库  ffifdyop</li>
</ul>
</li>
<li>手注 + 盲注
<ul>
<li>sqlmap等工具等绕狗脚本</li>
</ul>
</li>
<li>代码审计和综合考察
<ul>
<li>扫描目录
<ul>
<li>robots.txt</li>
<li>tar、zip、bak、rar等</li>
</ul>
</li>
<li>代码审计：
<ul>
<li>通读代码（结构、功能、关键信息）</li>
<li>细审上传、数据存取、命令执行等页面</li>
<li>追踪函数</li>
</ul>
</li>
<li>寻找疑似漏洞功能</li>
</ul>
</li>
</ul>
<h2 id="xss漏洞"><a class="markdownIt-Anchor" href="#xss漏洞"></a> XSS漏洞</h2>
<h3 id="1-反射型"><a class="markdownIt-Anchor" href="#1-反射型"></a> 1. 反射型</h3>
<ul>
<li>一般不会进入服务器</li>
<li>特点：非持久性型，参数跨站脚本</li>
<li>作用：调用用户cookie或者进行钓鱼</li>
</ul>
<h3 id="2-dom型"><a class="markdownIt-Anchor" href="#2-dom型"></a> 2. dom型</h3>
<ul>
<li>新型的xss漏洞，基于js，可以归属于反射型xss</li>
</ul>
<h3 id="3-存储型"><a class="markdownIt-Anchor" href="#3-存储型"></a> 3. 存储型</h3>
<ul>
<li>进入服务器</li>
<li>特点：持久型、更具有危害性</li>
<li>作用：渗透、挂马、蠕虫病毒、钓鱼</li>
</ul>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
        <tag>SQL注入</tag>
        <tag>XSS漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/04/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2>
<h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
